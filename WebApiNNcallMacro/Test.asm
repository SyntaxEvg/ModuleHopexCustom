; Assembly dump of MegaIDConverter.exe
; Generated by Ghidra Python script


================================================================================
; FUNCTION: FUN_00401050 @ 00401050
00401050  MOV  EAX, 0x4045b0
00401055  RET

================================================================================
; FUNCTION: FUN_00401060 @ 00401060
00401060  PUSH  EBP
00401061  MOV  EBP, ESP
00401063  PUSH  ESI ; CWinApp * this for ~CWinApp
00401064  MOV  ESI, ECX
00401066  CALL  00404268
0040106c  MOV  EAX, EBP, 0x8
0040106f  TEST  AL, 0x1
00401071  JZ  00401096
00401073  TEST  AL, 0x4
00401075  JNZ  00401088
00401077  PUSH  ESI ; void * param_1 for operator_delete
00401078  CALL  00404370
0040107e  ADD  ESP, 0x4
00401081  MOV  EAX, ESI
00401083  POP  ESI
00401084  POP  EBP
00401085  RET  0x4
00401088  PUSH  0xcc
0040108d  PUSH  ESI
0040108e  CALL  00401180
00401093  ADD  ESP, 0x8
00401096  MOV  EAX, ESI
00401098  POP  ESI
00401099  POP  EBP
0040109a  RET  0x4

================================================================================
; FUNCTION: FUN_004010a0 @ 004010a0
004010a0  PUSH  EBP
004010a1  MOV  EBP, ESP
004010a3  PUSH  -0x1 ; CDialog * this for ~CDialog
004010a5  PUSH  0x40303c ; CDialog * this for DoModal
004010aa  MOV  EAX, FS, 0x0
004010b0  PUSH  EAX ; CWnd * param_2 for CDialog
004010b1  SUB  ESP, 0xc0
004010b7  PUSH  ESI ; char * param_1 for SetRegistryKey
004010b8  MOV  EAX, 00406040
004010bd  XOR  EAX, EBP
004010bf  PUSH  EAX ; CWinApp * this for InitInstance
004010c0  LEA  EAX, EBP, -0xc
004010c3  MOV  FS, 0x0, EAX
004010c9  MOV  ESI, ECX
004010cb  CALL  00404264
004010d1  PUSH  0x40446c ; CWinApp * this for SetRegistryKey
004010d6  MOV  ECX, ESI
004010d8  CALL  00404260
004010de  PUSH  0x0 ; uint param_1 for CDialog
004010e0  PUSH  0x66 ; CDialog * this for CDialog
004010e2  LEA  ECX, EBP, 0xffffff34
004010e8  CALL  00404280
004010ee  MOV  EBP, -0x4, 0x0
004010f5  MOV  EBP, 0xffffff34, 0x40474c
004010ff  CALL  00404278
00401105  PUSH  0x80 ; LPCWSTR lpIconName for LoadIconW
0040110a  PUSH  0xe ; char * param_2 for AfxFindResourceHandle
0040110c  PUSH  0x80 ; char * param_1 for AfxFindResourceHandle
00401111  CALL  0040427c
00401117  PUSH  EAX ; HINSTANCE hInstance for LoadIconW
00401118  CALL  00404060
0040111e  MOV  EBP, -0x14, EAX
00401121  MOV  EBP, -0x20, 0x0
00401128  MOV  EBP, -0x24, 0x0
0040112f  MOV  EBP, -0x1c, 0xffffffff
00401136  MOV  EBP, -0x18, 0x0
0040113a  LEA  EAX, EBP, 0xffffff34
00401140  MOV  EBP, -0x4, 0x1
00401147  MOV  ECX, EAX
00401149  MOV  ESI, 0x20, EAX
0040114c  CALL  0040425c
00401152  LEA  ECX, EBP, 0xffffff34
00401158  CALL  00404258
0040115e  XOR  EAX, EAX
00401160  MOV  ECX, EBP, -0xc
00401163  MOV  FS, 0x0, ECX
0040116a  POP  ECX
0040116b  POP  ESI
0040116c  MOV  ESP, EBP
0040116e  POP  EBP
0040116f  RET

================================================================================
; FUNCTION: ~CDialog @ 00401170
00401170  JMP  00404258

================================================================================
; FUNCTION: _guard_check_icall @ 00401180
00401180  RET  0x0

================================================================================
; FUNCTION: FUN_00401190 @ 00401190
00401190  MOV  EAX, 0x1388
00401195  RET

================================================================================
; FUNCTION: FUN_004011a0 @ 004011a0
004011a0  XOR  EAX, EAX
004011a2  RET

================================================================================
; FUNCTION: FUN_004011b0 @ 004011b0
004011b0  MOV  EAX, ECX, 0xac
004011b6  AND  EAX, 0x20
004011b9  RET

================================================================================
; FUNCTION: FUN_004011c0 @ 004011c0
004011c0  MOV  EAX, ECX, 0xac
004011c6  AND  EAX, 0x10
004011c9  RET

================================================================================
; FUNCTION: FUN_004011d0 @ 004011d0
004011d0  MOV  EAX, ECX, 0xac
004011d6  AND  EAX, 0x8
004011d9  RET

================================================================================
; FUNCTION: FUN_004011e0 @ 004011e0
004011e0  MOV  EAX, ECX, 0xac
004011e6  AND  EAX, 0x4
004011e9  RET

================================================================================
; FUNCTION: FUN_004011f0 @ 004011f0
004011f0  MOV  EAX, ECX, 0xac
004011f6  AND  EAX, 0x2
004011f9  RET

================================================================================
; FUNCTION: FUN_00401200 @ 00401200
00401200  MOV  EAX, ECX, 0xac
00401206  AND  EAX, 0x1
00401209  RET

================================================================================
; FUNCTION: FUN_00401210 @ 00401210
00401210  RET  0x4

================================================================================
; FUNCTION: FUN_00401220 @ 00401220
00401220  MOV  EDX, ECX
00401222  PUSH  ESI
00401223  XOR  ESI, ESI
00401225  MOV  AL, EDX
00401227  CMP  AL, 0x20
00401229  JNZ  00401238
0040122b  NOP  EAX, EAX, 0x1
00401230  MOV  AL, EDX, 0x1
00401233  INC  EDX
00401234  CMP  AL, 0x20
00401236  JZ  00401230
00401238  TEST  AL, AL
0040123a  JZ  00401273
0040123c  NOP  EAX
00401240  LEA  ECX, EAX, -0x30
00401243  LEA  EDX, EDX, 0x1
00401246  CMP  CL, 0x9
00401249  JA  0040124f
0040124b  MOV  AL, CL
0040124d  JMP  00401265
0040124f  LEA  ECX, EAX, -0x41
00401252  CMP  CL, 0x5
00401255  JA  0040125b
00401257  ADD  AL, 0xc9
00401259  JMP  00401265
0040125b  LEA  ECX, EAX, -0x61
0040125e  CMP  CL, 0x5
00401261  JA  00401273
00401263  ADD  AL, 0xa9
00401265  SHL  ESI, 0x4
00401268  MOVSX  ECX, AL
0040126b  MOV  AL, EDX
0040126d  ADD  ESI, ECX
0040126f  TEST  AL, AL
00401271  JNZ  00401240
00401273  MOV  AX, SI
00401276  POP  ESI
00401277  RET

================================================================================
; FUNCTION: FUN_00401280 @ 00401280
00401280  PUSH  EBP
00401281  MOV  EBP, ESP
00401283  PUSH  ESI ; CDialog * this for ~CDialog
00401284  MOV  ESI, ECX
00401286  CALL  00404258
0040128c  MOV  EAX, EBP, 0x8
0040128f  TEST  AL, 0x1
00401291  JZ  004012b6
00401293  TEST  AL, 0x4
00401295  JNZ  004012a8
00401297  PUSH  ESI ; void * param_1 for operator_delete
00401298  CALL  00404370
0040129e  ADD  ESP, 0x4
004012a1  MOV  EAX, ESI
004012a3  POP  ESI
004012a4  POP  EBP
004012a5  RET  0x4
004012a8  PUSH  0xc0
004012ad  PUSH  ESI
004012ae  CALL  00401180
004012b3  ADD  ESP, 0x8
004012b6  MOV  EAX, ESI
004012b8  POP  ESI
004012b9  POP  EBP
004012ba  RET  0x4

================================================================================
; FUNCTION: FUN_004012c0 @ 004012c0
004012c0  MOV  EAX, 0x404620
004012c5  RET

================================================================================
; FUNCTION: FUN_004012d0 @ 004012d0
004012d0  PUSH  EBP
004012d1  MOV  EBP, ESP
004012d3  AND  ESP, 0xfffffff0
004012d6  SUB  ESP, 0x38
004012d9  MOV  EAX, 00406040
004012de  XOR  EAX, ESP
004012e0  MOV  ESP, 0x34, EAX
004012e4  PUSH  ESI
004012e5  MOV  ESI, ECX
004012e7  PUSH  EDI
004012e8  MOV  ESP, 0xc, ESI
004012ec  CMP  ESI, 0xb4, 0x0
004012f3  JNZ  0040165c
004012f9  CMP  ESI, 0xb0, 0x3ea
00401303  XORPS  XMM0, XMM0
00401306  MOV  ESI, 0xb4, 0x1
0040130d  MOVAPS  ESP, 0x10, XMM0
00401312  MOVQ  ESP, 0x20, XMM0
00401318  MOV  ESP, 0x28, 0x0
0040131d  JZ  004013d1
00401323  LEA  EAX, ESI, 0xa8
00401329  XOR  EDI, EDI
0040132b  LEA  EDX, ESP, 0x10
0040132f  XOR  CL, CL
00401331  MOV  ESI, EAX
00401333  MOV  AL, ESI
00401335  LEA  ESI, ESI, 0x1
00401338  INC  EDI
00401339  ADD  CL, AL
0040133b  MOV  ESP, 0x30, CL
0040133f  MOV  ESP, EDI, 0x1, 0x30, AL
00401343  CMP  EDI, 0x8
00401346  JGE  0040134e
00401348  MOV  CL, ESP, 0x30
0040134c  JMP  00401333
0040134e  MOV  ESI, ESP, 0xc
00401352  LEA  EDI, ESP, 0x31
00401356  MOV  ESP, 0x8, 0x3
0040135e  NOP
00401360  MOVZX  ECX, EDI, 0x1
00401364  MOVZX  EAX, EDI
00401367  SHL  ECX, 0x8
0040136a  ADD  ECX, EAX
0040136c  MOVZX  EAX, EDI, -0x1
00401370  SHL  ECX, 0x8
00401373  ADD  ECX, EAX
00401375  ADD  EDI, 0x3
00401378  MOV  ESP, 0xc, EDI
0040137c  MOV  EDI, 0x4
00401381  MOV  AL, CL
00401383  SHR  ECX, 0x6
00401386  AND  AL, 0x3f
00401388  CMP  AL, 0xa
0040138a  JNC  00401390
0040138c  ADD  AL, 0x30
0040138e  JMP  004013a5
00401390  CMP  AL, 0x24
00401392  JNC  00401398
00401394  ADD  AL, 0x37
00401396  JMP  004013a5
00401398  CMP  AL, 0x3e
0040139a  JNC  004013a0
0040139c  ADD  AL, 0x3d
0040139e  JMP  004013a5
004013a0  SETNZ  AL
004013a3  ADD  AL, 0x28
004013a5  MOV  EDX, AL
004013a7  INC  EDX
004013a8  SUB  EDI, 0x1
004013ab  JNZ  00401381
004013ad  SUB  ESP, 0x8, 0x1
004013b2  MOV  EDI, ESP, 0xc
004013b6  JNZ  00401360
004013b8  LEA  EAX, ESP, 0x10
004013bc  MOV  EDX, 0x0
004013bf  PUSH  EAX ; int param_1 for SetDlgItemTextA
004013c0  PUSH  0x3ea ; CWnd * this for SetDlgItemTextA
004013c5  MOV  ECX, ESI
004013c7  CALL  00404270
004013cd  MOV  EDI, ESI
004013cf  JMP  004013d3
004013d1  MOV  EDI, ECX
004013d3  CMP  ESI, 0xb0, 0x3e9
004013dd  XORPS  XMM0, XMM0
004013e0  MOVAPS  ESP, 0x10, XMM0
004013e5  MOVQ  ESP, 0x20, XMM0
004013eb  MOV  ESP, 0x28, 0x0
004013f0  JZ  00401436
004013f2  MOVZX  EAX, EDI, 0xae
004013f9  PUSH  EAX
004013fa  MOVZX  EAX, EDI, 0xac
00401401  PUSH  EAX
00401402  MOVZX  EAX, EDI, 0xaa
00401409  PUSH  EAX ; char * param_2 for SetDlgItemTextA
0040140a  MOVZX  EAX, EDI, 0xa8
00401411  PUSH  EAX
00401412  LEA  EAX, ESP, 0x20
00401416  PUSH  0x4045e8
0040141b  PUSH  EAX
0040141c  CALL  00401ec0
00401421  ADD  ESP, 0x18
00401424  LEA  EAX, ESP, 0x10
00401428  MOV  ECX, ESI
0040142a  PUSH  EAX ; int param_1 for SetDlgItemTextA
0040142b  PUSH  0x3e9 ; CWnd * this for SetDlgItemTextA
00401430  CALL  00404270
00401436  CMP  ESI, 0xb0, 0x3eb
00401440  XORPS  XMM0, XMM0
00401443  MOVAPS  ESP, 0x10, XMM0
00401448  MOVQ  ESP, 0x20, XMM0
0040144e  MOV  ESP, 0x28, 0x0
00401453  JZ  00401487
00401455  PUSH  EDI, 0xa8
0040145b  LEA  EAX, ESP, 0x14
0040145f  PUSH  0x404600
00401464  PUSH  EAX
00401465  CALL  00401ec0
0040146a  MOV  EDI, 00404270
00401470  ADD  ESP, 0xc
00401473  TEST  EAX, EAX
00401475  JZ  0040148d
00401477  LEA  EAX, ESP, 0x10
0040147b  MOV  ECX, ESI
0040147d  PUSH  EAX ; int param_1 for SetDlgItemTextA
0040147e  PUSH  0x3eb ; CWnd * this for SetDlgItemTextA
00401483  CALL  EDI
00401485  JMP  0040148d
00401487  MOV  EDI, 00404270
0040148d  CMP  ESI, 0xb0, 0x3ec
00401497  XORPS  XMM0, XMM0
0040149a  MOVAPS  ESP, 0x10, XMM0
0040149f  MOVQ  ESP, 0x20, XMM0
004014a5  MOV  ESP, 0x28, 0x0
004014aa  JZ  004014d6
004014ac  PUSH  ESI, 0xac
004014b2  LEA  EAX, ESP, 0x14
004014b6  PUSH  0x404600
004014bb  PUSH  EAX
004014bc  CALL  00401ec0
004014c1  ADD  ESP, 0xc
004014c4  TEST  EAX, EAX
004014c6  JZ  004014d6
004014c8  LEA  EAX, ESP, 0x10
004014cc  MOV  ECX, ESI
004014ce  PUSH  EAX ; int param_1 for SetDlgItemTextA
004014cf  PUSH  0x3ec ; CWnd * this for SetDlgItemTextA
004014d4  CALL  EDI
004014d6  CMP  ESI, 0xb0, 0x3ed
004014e0  XORPS  XMM0, XMM0
004014e3  MOVAPS  ESP, 0x10, XMM0
004014e8  MOVQ  ESP, 0x20, XMM0
004014ee  MOV  ESP, 0x28, 0x0
004014f3  JZ  0040151f
004014f5  PUSH  ESI, 0xa8
004014fb  LEA  EAX, ESP, 0x14
004014ff  PUSH  0x404604
00401504  PUSH  EAX
00401505  CALL  00401ec0
0040150a  ADD  ESP, 0xc
0040150d  TEST  EAX, EAX
0040150f  JZ  0040151f
00401511  LEA  EAX, ESP, 0x10
00401515  MOV  ECX, ESI
00401517  PUSH  EAX ; int param_1 for SetDlgItemTextA
00401518  PUSH  0x3ed ; CWnd * this for SetDlgItemTextA
0040151d  CALL  EDI
0040151f  CMP  ESI, 0xb0, 0x3ee
00401529  XORPS  XMM0, XMM0
0040152c  MOVAPS  ESP, 0x10, XMM0
00401531  MOVQ  ESP, 0x20, XMM0
00401537  MOV  ESP, 0x28, 0x0
0040153c  JZ  00401568
0040153e  PUSH  ESI, 0xac
00401544  LEA  EAX, ESP, 0x14
00401548  PUSH  0x404604
0040154d  PUSH  EAX
0040154e  CALL  00401ec0
00401553  ADD  ESP, 0xc
00401556  TEST  EAX, EAX
00401558  JZ  00401568
0040155a  LEA  EAX, ESP, 0x10
0040155e  MOV  ECX, ESI
00401560  PUSH  EAX ; int param_1 for SetDlgItemTextA
00401561  PUSH  0x3ee ; CWnd * this for SetDlgItemTextA
00401566  CALL  EDI
00401568  CMP  ESI, 0xb0, 0x3ef
00401572  XORPS  XMM0, XMM0
00401575  MOVAPS  ESP, 0x10, XMM0
0040157a  MOVQ  ESP, 0x20, XMM0
00401580  MOV  ESP, 0x28, 0x0
00401585  JZ  004015b7
00401587  PUSH  ESI, 0xac ; char * param_2 for SetDlgItemTextA
0040158d  LEA  EAX, ESP, 0x14
00401591  PUSH  ESI, 0xa8
00401597  PUSH  0x404618
0040159c  PUSH  EAX
0040159d  CALL  00401ec0
004015a2  ADD  ESP, 0x10
004015a5  TEST  EAX, EAX
004015a7  JZ  004015b7
004015a9  LEA  EAX, ESP, 0x10
004015ad  MOV  ECX, ESI
004015af  PUSH  EAX ; int param_1 for SetDlgItemTextA
004015b0  PUSH  0x3ef ; CWnd * this for SetDlgItemTextA
004015b5  CALL  EDI
004015b7  CMP  ESI, 0xb0, 0x3f0
004015c1  XORPS  XMM0, XMM0
004015c4  MOVAPS  ESP, 0x10, XMM0
004015c9  MOVQ  ESP, 0x20, XMM0
004015cf  MOV  ESP, 0x28, 0x0
004015d4  JZ  00401606
004015d6  PUSH  ESI, 0xac ; char * param_2 for SetDlgItemTextA
004015dc  LEA  EAX, ESP, 0x14
004015e0  PUSH  ESI, 0xa8
004015e6  PUSH  0x404608
004015eb  PUSH  EAX
004015ec  CALL  00401ec0
004015f1  ADD  ESP, 0x10
004015f4  TEST  EAX, EAX
004015f6  JZ  00401606
004015f8  LEA  EAX, ESP, 0x10
004015fc  MOV  ECX, ESI
004015fe  PUSH  EAX ; int param_1 for SetDlgItemTextA
004015ff  PUSH  0x3f0 ; CWnd * this for SetDlgItemTextA
00401604  CALL  EDI
00401606  CMP  ESI, 0xb0, 0x3f1
00401610  XORPS  XMM0, XMM0
00401613  MOVAPS  ESP, 0x10, XMM0
00401618  MOVQ  ESP, 0x20, XMM0
0040161e  MOV  ESP, 0x28, 0x0
00401623  JZ  00401655
00401625  PUSH  ESI, 0xac ; char * param_2 for SetDlgItemTextA
0040162b  LEA  EAX, ESP, 0x14
0040162f  PUSH  ESI, 0xa8
00401635  PUSH  0x404610
0040163a  PUSH  EAX
0040163b  CALL  00401ec0
00401640  ADD  ESP, 0x10
00401643  TEST  EAX, EAX
00401645  JZ  00401655
00401647  LEA  EAX, ESP, 0x10
0040164b  MOV  ECX, ESI
0040164d  PUSH  EAX ; int param_1 for SetDlgItemTextA
0040164e  PUSH  0x3f1 ; CWnd * this for SetDlgItemTextA
00401653  CALL  EDI
00401655  MOV  ESI, 0xb4, 0x0
0040165c  MOV  ECX, ESP, 0x3c
00401660  POP  EDI
00401661  POP  ESI
00401662  XOR  ECX, ESP
00401664  CALL  00402262
00401669  MOV  ESP, EBP
0040166b  POP  EBP
0040166c  RET

================================================================================
; FUNCTION: FUN_00401670 @ 00401670
00401670  PUSH  EDI ; CDialog * this for OnInitDialog
00401671  MOV  EDI, ECX
00401673  CALL  004041e8
00401679  PUSH  EDI, 0xb8 ; LPARAM lParam for SendMessageA
0040167f  PUSH  0x1 ; WPARAM wParam for SendMessageA
00401681  PUSH  0x80 ; UINT Msg for SendMessageA
00401686  PUSH  EDI, 0x20 ; HWND hWnd for SendMessageA
00401689  CALL  0040405c
0040168f  PUSH  EDI, 0xb8 ; LPARAM lParam for SendMessageA
00401695  PUSH  0x0 ; WPARAM wParam for SendMessageA
00401697  PUSH  0x80 ; UINT Msg for SendMessageA
0040169c  PUSH  EDI, 0x20 ; HWND hWnd for SendMessageA
0040169f  CALL  0040405c
004016a5  MOV  ECX, EDI
004016a7  CALL  004012d0
004016ac  MOV  EAX, 0x1
004016b1  POP  EDI
004016b2  RET

================================================================================
; FUNCTION: FUN_004016c0 @ 004016c0
004016c0  PUSH  EBP
004016c1  MOV  EBP, ESP
004016c3  AND  ESP, 0xfffffff8
004016c6  SUB  ESP, 0x74
004016c9  MOV  EAX, 00406040
004016ce  XOR  EAX, ESP
004016d0  MOV  ESP, 0x70, EAX
004016d4  PUSH  EBX
004016d5  PUSH  ESI ; CPaintDC * this for ~CPaintDC
004016d6  MOV  EBX, ECX
004016d8  PUSH  EDI ; CWnd * param_1 for CPaintDC
004016d9  PUSH  EBX, 0x20 ; HWND hWnd for IsIconic
004016dc  CALL  00404054
004016e2  TEST  EAX, EAX
004016e4  JZ  0040177c
004016ea  PUSH  EBX ; CPaintDC * this for CPaintDC
004016eb  LEA  ECX, ESP, 0x24
004016ef  CALL  004041c0
004016f5  PUSH  0x0 ; LPARAM lParam for SendMessageA
004016f7  PUSH  ESP, 0x28 ; WPARAM wParam for SendMessageA
004016fb  PUSH  0x27 ; UINT Msg for SendMessageA
004016fd  PUSH  EBX, 0x20 ; HWND hWnd for SendMessageA
00401700  CALL  0040405c
00401706  MOV  ESI, 00404048
0040170c  PUSH  0xb ; int nIndex for GetSystemMetrics
0040170e  CALL  ESI
00401710  PUSH  0xc ; int nIndex for GetSystemMetrics
00401712  MOV  EDI, EAX
00401714  CALL  ESI
00401716  MOV  ESI, EAX
00401718  XORPS  XMM0, XMM0
0040171b  LEA  EAX, ESP, 0x10
0040171f  PUSH  EAX ; LPRECT lpRect for GetClientRect
00401720  PUSH  EBX, 0x20 ; HWND hWnd for GetClientRect
00401723  MOVUPS  ESP, 0x18, XMM0
00401728  CALL  0040404c
0040172e  MOV  EAX, ESP, 0x1c
00401732  SUB  EAX, ESP, 0x14
00401736  PUSH  EBX, 0xb8 ; HICON hIcon for DrawIcon
0040173c  SUB  EAX, ESI
0040173e  INC  EAX
0040173f  CDQ
00401740  SUB  EAX, EDX
00401742  SAR  EAX, 0x1
00401744  PUSH  EAX ; int Y for DrawIcon
00401745  MOV  EAX, ESP, 0x20
00401749  SUB  EAX, ESP, 0x18
0040174d  SUB  EAX, EDI
0040174f  INC  EAX
00401750  CDQ
00401751  SUB  EAX, EDX
00401753  SAR  EAX, 0x1
00401755  PUSH  EAX ; int X for DrawIcon
00401756  PUSH  ESP, 0x30 ; HDC hDC for DrawIcon
0040175a  CALL  00404050
00401760  LEA  ECX, ESP, 0x20
00401764  CALL  00404358
0040176a  POP  EDI
0040176b  POP  ESI
0040176c  POP  EBX
0040176d  MOV  ECX, ESP, 0x70
00401771  XOR  ECX, ESP
00401773  CALL  00402262
00401778  MOV  ESP, EBP
0040177a  POP  EBP
0040177b  RET
0040177c  MOV  ECX, EBX
0040177e  CALL  00404348
00401784  MOV  ECX, ESP, 0x7c
00401788  POP  EDI
00401789  POP  ESI
0040178a  POP  EBX
0040178b  XOR  ECX, ESP
0040178d  CALL  00402262
00401792  MOV  ESP, EBP
00401794  POP  EBP
00401795  RET

================================================================================
; FUNCTION: FUN_004017b0 @ 004017b0
004017b0  PUSH  EBP
004017b1  MOV  EBP, ESP
004017b3  PUSH  -0x1
004017b5  PUSH  0x40306e
004017ba  MOV  EAX, FS, 0x0
004017c0  PUSH  EAX
004017c1  SUB  ESP, 0x14
004017c4  MOV  EAX, 00406040
004017c9  XOR  EAX, EBP
004017cb  MOV  EBP, -0x10, EAX
004017ce  PUSH  EBX
004017cf  PUSH  ESI
004017d0  PUSH  EDI ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * param_2 for GetDlgItemTextA
004017d1  PUSH  EAX ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * this for CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_>
004017d2  LEA  EAX, EBP, -0xc
004017d5  MOV  FS, 0x0, EAX
004017db  MOV  EBX, ECX
004017dd  CMP  EBX, 0xb4, 0x0
004017e4  JNZ  004018a1
004017ea  LEA  ECX, EBP, -0x20
004017ed  MOV  EBX, 0xb0, 0x3ea
004017f7  CALL  00404340
004017fd  LEA  EAX, EBP, -0x20
00401800  MOV  EBP, -0x4, 0x0
00401807  PUSH  EAX ; int param_1 for GetDlgItemTextA
00401808  PUSH  EBX, 0xb0 ; CWnd * this for GetDlgItemTextA
0040180e  MOV  ECX, EBX
00401810  CALL  00404338
00401816  MOV  EAX, EBP, -0x20
00401819  CMP  EAX, 0x7e
0040181c  LEA  ESI, EAX, 0x1
0040181f  CMOVNZ  ESI, EAX
00401822  XOR  EDI, EDI
00401824  XOR  ECX, ECX
00401826  MOV  EDX, 0x3
0040182b  NOP  EAX, EAX, 0x1
00401830  MOV  AL, EDX, ESI, 0x1
00401833  CMP  AL, 0x28
00401835  JNZ  0040183b
00401837  MOV  AL, 0x3e
00401839  JMP  00401855
0040183b  CMP  AL, 0x29
0040183d  JNZ  00401843
0040183f  MOV  AL, 0x3f
00401841  JMP  00401855
00401843  CMP  AL, 0x41
00401845  JGE  0040184b
00401847  ADD  AL, 0xd0
00401849  JMP  00401855
0040184b  CMP  AL, 0x61
0040184d  JGE  00401853
0040184f  ADD  AL, 0xc9
00401851  JMP  00401855
00401853  ADD  AL, 0xc3
00401855  SHL  ECX, 0x6
00401858  MOVSX  EAX, AL
0040185b  ADD  ECX, EAX
0040185d  SUB  EDX, 0x1
00401860  JNS  00401830
00401862  MOV  EBP, EDI, 0x1, -0x1c, CL
00401866  ADD  ESI, 0x4
00401869  SHR  ECX, 0x8
0040186c  MOV  EBP, EDI, 0x1, -0x1b, CL
00401870  SHR  ECX, 0x8
00401873  MOV  EBP, EDI, 0x1, -0x1a, CL
00401877  ADD  EDI, 0x3
0040187a  CMP  EDI, 0x9
0040187d  JL  00401824
0040187f  MOV  EAX, EBP, -0x1b
00401882  MOV  ECX, EBX
00401884  MOV  EDX, EBP, -0x17
00401887  MOV  EBX, 0xa8, EAX
0040188d  MOV  EBX, 0xac, EDX
00401893  CALL  004012d0
00401898  LEA  ECX, EBP, -0x20
0040189b  CALL  0040433c
004018a1  MOV  ECX, EBP, -0xc
004018a4  MOV  FS, 0x0, ECX
004018ab  POP  ECX
004018ac  POP  EDI
004018ad  POP  ESI
004018ae  POP  EBX
004018af  MOV  ECX, EBP, -0x10
004018b2  XOR  ECX, EBP
004018b4  CALL  00402262
004018b9  MOV  ESP, EBP
004018bb  POP  EBP
004018bc  RET

================================================================================
; FUNCTION: FUN_004018c0 @ 004018c0
004018c0  PUSH  EBP ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * this for ~CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_>
004018c1  MOV  EBP, ESP
004018c3  PUSH  -0x1
004018c5  PUSH  0x4030ae
004018ca  MOV  EAX, FS, 0x0
004018d0  PUSH  EAX
004018d1  SUB  ESP, 0x28
004018d4  MOV  EAX, 00406040
004018d9  XOR  EAX, EBP
004018db  MOV  EBP, -0x10, EAX
004018de  PUSH  EBX
004018df  PUSH  ESI
004018e0  PUSH  EDI ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * param_2 for GetDlgItemTextA
004018e1  PUSH  EAX ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * this for CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_>
004018e2  LEA  EAX, EBP, -0xc
004018e5  MOV  FS, 0x0, EAX
004018eb  MOV  EBX, ECX
004018ed  CMP  EBX, 0xb4, 0x0
004018f4  JNZ  004019c1
004018fa  LEA  ECX, EBP, -0x34
004018fd  MOV  EBX, 0xb0, 0x3e9
00401907  CALL  00404340
0040190d  LEA  EAX, EBP, -0x34
00401910  MOV  EBP, -0x4, 0x0
00401917  PUSH  EAX ; int param_1 for GetDlgItemTextA
00401918  PUSH  EBX, 0xb0 ; CWnd * this for GetDlgItemTextA
0040191e  MOV  ECX, EBX
00401920  CALL  00404338
00401926  MOV  EDI, EBP, -0x34
00401929  LEA  EAX, EBP, -0x20
0040192c  MOV  ESI, 00404108
00401932  PUSH  0x5 ; size_t _Count for strncpy
00401934  PUSH  EDI ; char * _Source for strncpy
00401935  PUSH  EAX ; char * _Dest for strncpy
00401936  CALL  ESI
00401938  PUSH  0x5 ; size_t _Count for strncpy
0040193a  LEA  EAX, EDI, 0x4
0040193d  MOV  EBP, -0x1c, 0x0
00401941  PUSH  EAX ; char * _Source for strncpy
00401942  LEA  EAX, EBP, -0x18
00401945  PUSH  EAX ; char * _Dest for strncpy
00401946  CALL  ESI
00401948  PUSH  0x5 ; size_t _Count for strncpy
0040194a  LEA  EAX, EDI, 0x8
0040194d  MOV  EBP, -0x14, 0x0
00401951  PUSH  EAX ; char * _Source for strncpy
00401952  LEA  EAX, EBP, -0x30
00401955  PUSH  EAX ; char * _Dest for strncpy
00401956  CALL  ESI
00401958  PUSH  0x5 ; size_t _Count for strncpy
0040195a  LEA  EAX, EDI, 0xc
0040195d  MOV  EBP, -0x2c, 0x0
00401961  PUSH  EAX ; char * _Source for strncpy
00401962  LEA  EAX, EBP, -0x28
00401965  PUSH  EAX ; char * _Dest for strncpy
00401966  CALL  ESI
00401968  ADD  ESP, 0x30
0040196b  MOV  EBP, -0x24, 0x0
0040196f  LEA  ECX, EBP, -0x18
00401972  CALL  00401220
00401977  MOVZX  ESI, AX
0040197a  LEA  ECX, EBP, -0x20
0040197d  SHL  ESI, 0x10
00401980  CALL  00401220
00401985  MOVZX  EAX, AX
00401988  LEA  ECX, EBP, -0x28
0040198b  OR  ESI, EAX
0040198d  MOV  EBX, 0xa8, ESI
00401993  CALL  00401220
00401998  MOVZX  ESI, AX
0040199b  LEA  ECX, EBP, -0x30
0040199e  SHL  ESI, 0x10
004019a1  CALL  00401220
004019a6  MOVZX  EAX, AX
004019a9  MOV  ECX, EBX
004019ab  OR  ESI, EAX
004019ad  MOV  EBX, 0xac, ESI
004019b3  CALL  004012d0
004019b8  LEA  ECX, EBP, -0x34
004019bb  CALL  0040433c
004019c1  MOV  ECX, EBP, -0xc
004019c4  MOV  FS, 0x0, ECX
004019cb  POP  ECX
004019cc  POP  EDI
004019cd  POP  ESI
004019ce  POP  EBX
004019cf  MOV  ECX, EBP, -0x10
004019d2  XOR  ECX, EBP
004019d4  CALL  00402262
004019d9  MOV  ESP, EBP
004019db  POP  EBP
004019dc  RET

================================================================================
; FUNCTION: FUN_004019e0 @ 004019e0
004019e0  PUSH  EBP
004019e1  MOV  EBP, ESP
004019e3  PUSH  -0x1
004019e5  PUSH  0x4030ee ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * this for ~CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_>
004019ea  MOV  EAX, FS, 0x0
004019f0  PUSH  EAX
004019f1  SUB  ESP, 0x8
004019f4  PUSH  ESI ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * param_2 for GetDlgItemTextA
004019f5  MOV  EAX, 00406040
004019fa  XOR  EAX, EBP
004019fc  PUSH  EAX ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * this for CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_>
004019fd  LEA  EAX, EBP, -0xc
00401a00  MOV  FS, 0x0, EAX
00401a06  MOV  ESI, ECX
00401a08  CMP  ESI, 0xb4, 0x0
00401a0f  JNZ  00401a6c
00401a11  LEA  ECX, EBP, -0x10
00401a14  MOV  ESI, 0xb0, 0x3eb
00401a1e  CALL  00404340
00401a24  LEA  EAX, EBP, -0x10
00401a27  MOV  EBP, -0x4, 0x0
00401a2e  PUSH  EAX ; int param_1 for GetDlgItemTextA
00401a2f  PUSH  ESI, 0xb0 ; CWnd * this for GetDlgItemTextA
00401a35  MOV  ECX, ESI
00401a37  CALL  00404338
00401a3d  PUSH  0x10 ; int _Radix for strtoul
00401a3f  LEA  EAX, EBP, -0x14
00401a42  MOV  EBP, -0x14, 0x0
00401a49  PUSH  EAX ; char * * _EndPtr for strtoul
00401a4a  PUSH  EBP, -0x10 ; char * _Str for strtoul
00401a4d  CALL  00404088
00401a53  ADD  ESP, 0xc
00401a56  MOV  ESI, 0xa8, EAX
00401a5c  MOV  ECX, ESI
00401a5e  CALL  004012d0
00401a63  LEA  ECX, EBP, -0x10
00401a66  CALL  0040433c
00401a6c  MOV  ECX, EBP, -0xc
00401a6f  MOV  FS, 0x0, ECX
00401a76  POP  ECX
00401a77  POP  ESI
00401a78  MOV  ESP, EBP
00401a7a  POP  EBP
00401a7b  RET

================================================================================
; FUNCTION: FUN_00401a80 @ 00401a80
00401a80  PUSH  EBP
00401a81  MOV  EBP, ESP
00401a83  PUSH  -0x1
00401a85  PUSH  0x4030ee ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * this for ~CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_>
00401a8a  MOV  EAX, FS, 0x0
00401a90  PUSH  EAX
00401a91  SUB  ESP, 0x8
00401a94  PUSH  ESI ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * param_2 for GetDlgItemTextA
00401a95  MOV  EAX, 00406040
00401a9a  XOR  EAX, EBP
00401a9c  PUSH  EAX ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * this for CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_>
00401a9d  LEA  EAX, EBP, -0xc
00401aa0  MOV  FS, 0x0, EAX
00401aa6  MOV  ESI, ECX
00401aa8  CMP  ESI, 0xb4, 0x0
00401aaf  JNZ  00401b0c
00401ab1  LEA  ECX, EBP, -0x10
00401ab4  MOV  ESI, 0xb0, 0x3ec
00401abe  CALL  00404340
00401ac4  LEA  EAX, EBP, -0x10
00401ac7  MOV  EBP, -0x4, 0x0
00401ace  PUSH  EAX ; int param_1 for GetDlgItemTextA
00401acf  PUSH  ESI, 0xb0 ; CWnd * this for GetDlgItemTextA
00401ad5  MOV  ECX, ESI
00401ad7  CALL  00404338
00401add  PUSH  0x10 ; int _Radix for strtoul
00401adf  LEA  EAX, EBP, -0x14
00401ae2  MOV  EBP, -0x14, 0x0
00401ae9  PUSH  EAX ; char * * _EndPtr for strtoul
00401aea  PUSH  EBP, -0x10 ; char * _Str for strtoul
00401aed  CALL  00404088
00401af3  ADD  ESP, 0xc
00401af6  MOV  ESI, 0xac, EAX
00401afc  MOV  ECX, ESI
00401afe  CALL  004012d0
00401b03  LEA  ECX, EBP, -0x10
00401b06  CALL  0040433c
00401b0c  MOV  ECX, EBP, -0xc
00401b0f  MOV  FS, 0x0, ECX
00401b16  POP  ECX
00401b17  POP  ESI
00401b18  MOV  ESP, EBP
00401b1a  POP  EBP
00401b1b  RET

================================================================================
; FUNCTION: FUN_00401b20 @ 00401b20
00401b20  PUSH  EBP
00401b21  MOV  EBP, ESP
00401b23  PUSH  -0x1
00401b25  PUSH  0x4030ee ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * this for ~CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_>
00401b2a  MOV  EAX, FS, 0x0
00401b30  PUSH  EAX
00401b31  SUB  ESP, 0x8
00401b34  PUSH  ESI ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * param_2 for GetDlgItemTextA
00401b35  MOV  EAX, 00406040
00401b3a  XOR  EAX, EBP
00401b3c  PUSH  EAX ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * this for CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_>
00401b3d  LEA  EAX, EBP, -0xc
00401b40  MOV  FS, 0x0, EAX
00401b46  MOV  ESI, ECX
00401b48  CMP  ESI, 0xb4, 0x0
00401b4f  JNZ  00401bac
00401b51  LEA  ECX, EBP, -0x10
00401b54  MOV  ESI, 0xb0, 0x3ed
00401b5e  CALL  00404340
00401b64  LEA  EAX, EBP, -0x10
00401b67  MOV  EBP, -0x4, 0x0
00401b6e  PUSH  EAX ; int param_1 for GetDlgItemTextA
00401b6f  PUSH  ESI, 0xb0 ; CWnd * this for GetDlgItemTextA
00401b75  MOV  ECX, ESI
00401b77  CALL  00404338
00401b7d  PUSH  0xa ; int _Radix for strtoul
00401b7f  LEA  EAX, EBP, -0x14
00401b82  MOV  EBP, -0x14, 0x0
00401b89  PUSH  EAX ; char * * _EndPtr for strtoul
00401b8a  PUSH  EBP, -0x10 ; char * _Str for strtoul
00401b8d  CALL  00404088
00401b93  ADD  ESP, 0xc
00401b96  MOV  ESI, 0xa8, EAX
00401b9c  MOV  ECX, ESI
00401b9e  CALL  004012d0
00401ba3  LEA  ECX, EBP, -0x10
00401ba6  CALL  0040433c
00401bac  MOV  ECX, EBP, -0xc
00401baf  MOV  FS, 0x0, ECX
00401bb6  POP  ECX
00401bb7  POP  ESI
00401bb8  MOV  ESP, EBP
00401bba  POP  EBP
00401bbb  RET

================================================================================
; FUNCTION: FUN_00401bc0 @ 00401bc0
00401bc0  PUSH  EBP
00401bc1  MOV  EBP, ESP
00401bc3  PUSH  -0x1
00401bc5  PUSH  0x4030ee ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * this for ~CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_>
00401bca  MOV  EAX, FS, 0x0
00401bd0  PUSH  EAX
00401bd1  SUB  ESP, 0x8
00401bd4  PUSH  ESI ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * param_2 for GetDlgItemTextA
00401bd5  MOV  EAX, 00406040
00401bda  XOR  EAX, EBP
00401bdc  PUSH  EAX ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * this for CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_>
00401bdd  LEA  EAX, EBP, -0xc
00401be0  MOV  FS, 0x0, EAX
00401be6  MOV  ESI, ECX
00401be8  CMP  ESI, 0xb4, 0x0
00401bef  JNZ  00401c4c
00401bf1  LEA  ECX, EBP, -0x10
00401bf4  MOV  ESI, 0xb0, 0x3ee
00401bfe  CALL  00404340
00401c04  LEA  EAX, EBP, -0x10
00401c07  MOV  EBP, -0x4, 0x0
00401c0e  PUSH  EAX ; int param_1 for GetDlgItemTextA
00401c0f  PUSH  ESI, 0xb0 ; CWnd * this for GetDlgItemTextA
00401c15  MOV  ECX, ESI
00401c17  CALL  00404338
00401c1d  PUSH  0xa ; int _Radix for strtoul
00401c1f  LEA  EAX, EBP, -0x14
00401c22  MOV  EBP, -0x14, 0x0
00401c29  PUSH  EAX ; char * * _EndPtr for strtoul
00401c2a  PUSH  EBP, -0x10 ; char * _Str for strtoul
00401c2d  CALL  00404088
00401c33  ADD  ESP, 0xc
00401c36  MOV  ESI, 0xac, EAX
00401c3c  MOV  ECX, ESI
00401c3e  CALL  004012d0
00401c43  LEA  ECX, EBP, -0x10
00401c46  CALL  0040433c
00401c4c  MOV  ECX, EBP, -0xc
00401c4f  MOV  FS, 0x0, ECX
00401c56  POP  ECX
00401c57  POP  ESI
00401c58  MOV  ESP, EBP
00401c5a  POP  EBP
00401c5b  RET

================================================================================
; FUNCTION: FUN_00401c60 @ 00401c60
00401c60  PUSH  EBP
00401c61  MOV  EBP, ESP
00401c63  PUSH  -0x1
00401c65  PUSH  0x4030ee ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * this for ~CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_>
00401c6a  MOV  EAX, FS, 0x0
00401c70  PUSH  EAX
00401c71  SUB  ESP, 0x8
00401c74  PUSH  ESI ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * param_2 for GetDlgItemTextA
00401c75  MOV  EAX, 00406040
00401c7a  XOR  EAX, EBP
00401c7c  PUSH  EAX ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * this for CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_>
00401c7d  LEA  EAX, EBP, -0xc
00401c80  MOV  FS, 0x0, EAX
00401c86  MOV  ESI, ECX
00401c88  CMP  ESI, 0xb4, 0x0
00401c8f  JNZ  00401cf2
00401c91  LEA  ECX, EBP, -0x10
00401c94  MOV  ESI, 0xb0, 0x3ef
00401c9e  CALL  00404340
00401ca4  LEA  EAX, EBP, -0x10
00401ca7  MOV  EBP, -0x4, 0x0
00401cae  PUSH  EAX ; int param_1 for GetDlgItemTextA
00401caf  PUSH  ESI, 0xb0 ; CWnd * this for GetDlgItemTextA
00401cb5  MOV  ECX, ESI
00401cb7  CALL  00404338
00401cbd  PUSH  0xa ; int _Radix for _strtoi64
00401cbf  LEA  EAX, EBP, -0x14
00401cc2  MOV  EBP, -0x14, 0x0
00401cc9  PUSH  EAX ; char * * _EndPtr for _strtoi64
00401cca  PUSH  EBP, -0x10 ; char * _String for _strtoi64
00401ccd  CALL  00404080
00401cd3  ADD  ESP, 0xc
00401cd6  MOV  ESI, 0xa8, EAX
00401cdc  MOV  ECX, ESI
00401cde  MOV  ESI, 0xac, EDX
00401ce4  CALL  004012d0
00401ce9  LEA  ECX, EBP, -0x10
00401cec  CALL  0040433c
00401cf2  MOV  ECX, EBP, -0xc
00401cf5  MOV  FS, 0x0, ECX
00401cfc  POP  ECX
00401cfd  POP  ESI
00401cfe  MOV  ESP, EBP
00401d00  POP  EBP
00401d01  RET

================================================================================
; FUNCTION: FUN_00401d10 @ 00401d10
00401d10  PUSH  EBP
00401d11  MOV  EBP, ESP
00401d13  PUSH  -0x1
00401d15  PUSH  0x4030ee ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * this for ~CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_>
00401d1a  MOV  EAX, FS, 0x0
00401d20  PUSH  EAX
00401d21  SUB  ESP, 0x8
00401d24  PUSH  ESI ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * param_2 for GetDlgItemTextA
00401d25  MOV  EAX, 00406040
00401d2a  XOR  EAX, EBP
00401d2c  PUSH  EAX ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * this for CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_>
00401d2d  LEA  EAX, EBP, -0xc
00401d30  MOV  FS, 0x0, EAX
00401d36  MOV  ESI, ECX
00401d38  CMP  ESI, 0xb4, 0x0
00401d3f  JNZ  00401da2
00401d41  LEA  ECX, EBP, -0x10
00401d44  MOV  ESI, 0xb0, 0x3f0
00401d4e  CALL  00404340
00401d54  LEA  EAX, EBP, -0x10
00401d57  MOV  EBP, -0x4, 0x0
00401d5e  PUSH  EAX ; int param_1 for GetDlgItemTextA
00401d5f  PUSH  ESI, 0xb0 ; CWnd * this for GetDlgItemTextA
00401d65  MOV  ECX, ESI
00401d67  CALL  00404338
00401d6d  PUSH  0xa ; int _Radix for _strtoui64
00401d6f  LEA  EAX, EBP, -0x14
00401d72  MOV  EBP, -0x14, 0x0
00401d79  PUSH  EAX ; char * * _EndPtr for _strtoui64
00401d7a  PUSH  EBP, -0x10 ; char * _String for _strtoui64
00401d7d  CALL  00404084
00401d83  ADD  ESP, 0xc
00401d86  MOV  ESI, 0xa8, EAX
00401d8c  MOV  ECX, ESI
00401d8e  MOV  ESI, 0xac, EDX
00401d94  CALL  004012d0
00401d99  LEA  ECX, EBP, -0x10
00401d9c  CALL  0040433c
00401da2  MOV  ECX, EBP, -0xc
00401da5  MOV  FS, 0x0, ECX
00401dac  POP  ECX
00401dad  POP  ESI
00401dae  MOV  ESP, EBP
00401db0  POP  EBP
00401db1  RET

================================================================================
; FUNCTION: FUN_00401dc0 @ 00401dc0
00401dc0  PUSH  EBP
00401dc1  MOV  EBP, ESP
00401dc3  PUSH  -0x1
00401dc5  PUSH  0x4030ee ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * this for ~CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_>
00401dca  MOV  EAX, FS, 0x0
00401dd0  PUSH  EAX
00401dd1  SUB  ESP, 0x8
00401dd4  PUSH  ESI ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * param_2 for GetDlgItemTextA
00401dd5  MOV  EAX, 00406040
00401dda  XOR  EAX, EBP
00401ddc  PUSH  EAX ; CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_> * this for CStringT<char,class_StrTraitMFC_DLL<char,class_ATL::ChTraitsCRT<char>_>_>
00401ddd  LEA  EAX, EBP, -0xc
00401de0  MOV  FS, 0x0, EAX
00401de6  MOV  ESI, ECX
00401de8  CMP  ESI, 0xb4, 0x0
00401def  JNZ  00401e52
00401df1  LEA  ECX, EBP, -0x10
00401df4  MOV  ESI, 0xb0, 0x3f1
00401dfe  CALL  00404340
00401e04  LEA  EAX, EBP, -0x10
00401e07  MOV  EBP, -0x4, 0x0
00401e0e  PUSH  EAX ; int param_1 for GetDlgItemTextA
00401e0f  PUSH  ESI, 0xb0 ; CWnd * this for GetDlgItemTextA
00401e15  MOV  ECX, ESI
00401e17  CALL  00404338
00401e1d  PUSH  0x10 ; int _Radix for _strtoui64
00401e1f  LEA  EAX, EBP, -0x14
00401e22  MOV  EBP, -0x14, 0x0
00401e29  PUSH  EAX ; char * * _EndPtr for _strtoui64
00401e2a  PUSH  EBP, -0x10 ; char * _String for _strtoui64
00401e2d  CALL  00404084
00401e33  ADD  ESP, 0xc
00401e36  MOV  ESI, 0xa8, EAX
00401e3c  MOV  ECX, ESI
00401e3e  MOV  ESI, 0xac, EDX
00401e44  CALL  004012d0
00401e49  LEA  ECX, EBP, -0x10
00401e4c  CALL  0040433c
00401e52  MOV  ECX, EBP, -0xc
00401e55  MOV  FS, 0x0, ECX
00401e5c  POP  ECX
00401e5d  POP  ESI
00401e5e  MOV  ESP, EBP
00401e60  POP  EBP
00401e61  RET

================================================================================
; FUNCTION: FUN_00401e70 @ 00401e70
00401e70  PUSH  EBP
00401e71  MOV  EBP, ESP
00401e73  MOVZX  EAX, EBP, 0x8
00401e77  MOV  EBP, 0x8, EAX
00401e7a  POP  EBP
00401e7b  JMP  004041cc

================================================================================
; FUNCTION: FUN_00401e90 @ 00401e90
00401e90  PUSH  0x1 ; BOOL bEnable for EnableWindow
00401e92  PUSH  ECX, 0x20 ; HWND hWnd for EnableWindow
00401e95  CALL  00404058
00401e9b  RET

================================================================================
; FUNCTION: FUN_00401ea0 @ 00401ea0
00401ea0  PUSH  0x0 ; BOOL bEnable for EnableWindow
00401ea2  PUSH  ECX, 0x20 ; HWND hWnd for EnableWindow
00401ea5  CALL  00404058
00401eab  RET

================================================================================
; FUNCTION: FUN_00401eb0 @ 00401eb0
00401eb0  MOV  EAX, 0x406540
00401eb5  RET

================================================================================
; FUNCTION: FUN_00401ec0 @ 00401ec0
00401ec0  PUSH  EBP
00401ec1  MOV  EBP, ESP
00401ec3  AND  ESP, 0xfffffff8
00401ec6  LEA  EAX, EBP, 0x10
00401ec9  PUSH  EAX
00401eca  PUSH  0x0
00401ecc  PUSH  EBP, 0xc
00401ecf  PUSH  -0x1
00401ed1  PUSH  EBP, 0x8
00401ed4  CALL  00401eb0
00401ed9  MOV  ECX, EAX
00401edb  PUSH  EAX, 0x4
00401ede  OR  ECX, 0x1
00401ee1  PUSH  ECX
00401ee2  CALL  004040fc
00401ee8  OR  ECX, 0xffffffff
00401eeb  ADD  ESP, 0x1c
00401eee  TEST  EAX, EAX
00401ef0  CMOVS  EAX, ECX
00401ef3  MOV  ESP, EBP
00401ef5  POP  EBP
00401ef6  RET

================================================================================
; FUNCTION: FUN_00401f00 @ 00401f00
00401f00  PUSH  0x0 ; DWORD dwSpinCount for InitializeCriticalSectionAndSpinCount
00401f02  PUSH  ECX ; LPCRITICAL_SECTION lpCriticalSection for InitializeCriticalSectionAndSpinCount
00401f03  CALL  00404040
00401f09  TEST  EAX, EAX
00401f0b  JNZ  00401f20
00401f0d  CALL  0040403c
00401f13  TEST  EAX, EAX
00401f15  JLE  00401f22
00401f17  MOVZX  EAX, AX
00401f1a  OR  EAX, 0x80070000
00401f1f  RET
00401f20  XOR  EAX, EAX
00401f22  RET

================================================================================
; FUNCTION: operator_delete @ 00401f23
00401f23  JMP  00404370

================================================================================
; FUNCTION: GetThisMessageMap @ 00401f2f
00401f2f  JMP  00404364

================================================================================
; FUNCTION: DoModal @ 00401f35
00401f35  JMP  0040425c

================================================================================
; FUNCTION: GetRuntimeClass @ 00401f3b
00401f3b  JMP  00404254

================================================================================
; FUNCTION: OnCmdMsg @ 00401f41
00401f41  JMP  00404250

================================================================================
; FUNCTION: OnFinalRelease @ 00401f47
00401f47  JMP  0040424c

================================================================================
; FUNCTION: IsInvokeAllowed @ 00401f4d
00401f4d  JMP  00404248

================================================================================
; FUNCTION: GetDispatchIID @ 00401f53
00401f53  JMP  00404244

================================================================================
; FUNCTION: GetTypeInfoCount @ 00401f59
00401f59  JMP  00404240

================================================================================
; FUNCTION: GetTypeLibCache @ 00401f5f
00401f5f  JMP  0040423c

================================================================================
; FUNCTION: GetTypeLib @ 00401f65
00401f65  JMP  00404238

================================================================================
; FUNCTION: GetCommandMap @ 00401f6b
00401f6b  JMP  00404234

================================================================================
; FUNCTION: GetDispatchMap @ 00401f71
00401f71  JMP  00404230

================================================================================
; FUNCTION: GetConnectionMap @ 00401f77
00401f77  JMP  0040422c

================================================================================
; FUNCTION: GetInterfaceMap @ 00401f7d
00401f7d  JMP  00404228

================================================================================
; FUNCTION: GetEventSinkMap @ 00401f83
00401f83  JMP  00404224

================================================================================
; FUNCTION: OnCreateAggregates @ 00401f89
00401f89  JMP  00404220

================================================================================
; FUNCTION: GetInterfaceHook @ 00401f8f
00401f8f  JMP  0040421c

================================================================================
; FUNCTION: GetExtraConnectionPoints @ 00401f95
00401f95  JMP  00404218

================================================================================
; FUNCTION: GetConnectionHook @ 00401f9b
00401f9b  JMP  00404214

================================================================================
; FUNCTION: Run @ 00401fa1
00401fa1  JMP  00404210

================================================================================
; FUNCTION: PreTranslateMessage @ 00401fa7
00401fa7  JMP  0040420c

================================================================================
; FUNCTION: PumpMessage @ 00401fad
00401fad  JMP  00404208

================================================================================
; FUNCTION: OnIdle @ 00401fb3
00401fb3  JMP  00404204

================================================================================
; FUNCTION: IsIdleMessage @ 00401fb9
00401fb9  JMP  00404200

================================================================================
; FUNCTION: ExitInstance @ 00401fbf
00401fbf  JMP  004041fc

================================================================================
; FUNCTION: ProcessWndProcException @ 00401fc5
00401fc5  JMP  004041f8

================================================================================
; FUNCTION: ProcessMessageFilter @ 00401fcb
00401fcb  JMP  0040434c

================================================================================
; FUNCTION: GetMainWnd @ 00401fd1
00401fd1  JMP  004041f0

================================================================================
; FUNCTION: Delete @ 00401fd7
00401fd7  JMP  004041ec

================================================================================
; FUNCTION: GetProfileIntA @ 00401fdd
00401fdd  JMP  0040417c

================================================================================
; FUNCTION: WriteProfileInt @ 00401fe3
00401fe3  JMP  00404360

================================================================================
; FUNCTION: GetProfileStringA @ 00401fe9
00401fe9  JMP  00404354

================================================================================
; FUNCTION: WriteProfileStringA @ 00401fef
00401fef  JMP  00404350

================================================================================
; FUNCTION: GetProfileBinary @ 00401ff5
00401ff5  JMP  00404344

================================================================================
; FUNCTION: WriteProfileBinary @ 00401ffe
00401ffe  JMP  00404330

================================================================================
; FUNCTION: InitLibId @ 00402004
00402004  JMP  0040432c

================================================================================
; FUNCTION: Register @ 0040200a
0040200a  JMP  00404308

================================================================================
; FUNCTION: Unregister @ 00402010
00402010  JMP  004042d8

================================================================================
; FUNCTION: OpenDocumentFile @ 00402016
00402016  JMP  004042d4

================================================================================
; FUNCTION: OpenDocumentFile @ 0040201c
0040201c  JMP  004042d0

================================================================================
; FUNCTION: AddToRecentFileList @ 00402022
00402022  JMP  004042cc

================================================================================
; FUNCTION: InitApplication @ 00402028
00402028  JMP  004042c0

================================================================================
; FUNCTION: SaveAllModified @ 0040202e
0040202e  JMP  004042bc

================================================================================
; FUNCTION: DoMessageBox @ 00402034
00402034  JMP  004042b8

================================================================================
; FUNCTION: DoWaitCursor @ 0040203a
0040203a  JMP  004042b4

================================================================================
; FUNCTION: OnDDECommand @ 00402040
00402040  JMP  004042b0

================================================================================
; FUNCTION: WinHelpA @ 00402046
00402046  JMP  004042ac

================================================================================
; FUNCTION: HtmlHelpA @ 0040204c
0040204c  JMP  004042a8

================================================================================
; FUNCTION: WinHelpInternal @ 00402052
00402052  JMP  004042a4

================================================================================
; FUNCTION: RegisterWithRestartManager @ 00402058
00402058  JMP  004042a0

================================================================================
; FUNCTION: RegisterWithRestartManager @ 0040205e
0040205e  JMP  0040429c

================================================================================
; FUNCTION: ApplicationRecoveryCallback @ 00402064
00402064  JMP  00404298

================================================================================
; FUNCTION: GetDataRecoveryHandler @ 0040206a
0040206a  JMP  00404294

================================================================================
; FUNCTION: IsTaskbarInteractionEnabled @ 00402070
00402070  JMP  00404290

================================================================================
; FUNCTION: RestartInstance @ 00402076
00402076  JMP  0040428c

================================================================================
; FUNCTION: LoadAppLangResourceDLL @ 0040207c
0040207c  JMP  00404288

================================================================================
; FUNCTION: LoadSysPolicies @ 00402082
00402082  JMP  00404284

================================================================================
; FUNCTION: AfxGetModuleState @ 00402088
00402088  JMP  00404278

================================================================================
; FUNCTION: GetRuntimeClass @ 00402094
00402094  JMP  00404334

================================================================================
; FUNCTION: OnCmdMsg @ 0040209a
0040209a  JMP  00404328

================================================================================
; FUNCTION: OnFinalRelease @ 004020a0
004020a0  JMP  00404324

================================================================================
; FUNCTION: GetInterfaceMap @ 004020a6
004020a6  JMP  00404320

================================================================================
; FUNCTION: PreSubclassWindow @ 004020ac
004020ac  JMP  0040431c

================================================================================
; FUNCTION: Create @ 004020b2
004020b2  JMP  00404318

================================================================================
; FUNCTION: CreateEx @ 004020b8
004020b8  JMP  00404314

================================================================================
; FUNCTION: CreateEx @ 004020be
004020be  JMP  00404310

================================================================================
; FUNCTION: DestroyWindow @ 004020c4
004020c4  JMP  0040430c

================================================================================
; FUNCTION: PreCreateWindow @ 004020ca
004020ca  JMP  00404304

================================================================================
; FUNCTION: CalcWindowRect @ 004020d0
004020d0  JMP  00404300

================================================================================
; FUNCTION: GetMenu @ 004020d6
004020d6  JMP  004042fc

================================================================================
; FUNCTION: SetMenu @ 004020dc
004020dc  JMP  004042f8

================================================================================
; FUNCTION: OnToolHitTest @ 004020e2
004020e2  JMP  004042f4

================================================================================
; FUNCTION: GetScrollBarCtrl @ 004020e8
004020e8  JMP  004042f0

================================================================================
; FUNCTION: WinHelpA @ 004020ee
004020ee  JMP  004042ec

================================================================================
; FUNCTION: HtmlHelpA @ 004020f4
004020f4  JMP  004042e8

================================================================================
; FUNCTION: WinHelpInternal @ 004020fa
004020fa  JMP  004042e4

================================================================================
; FUNCTION: ContinueModal @ 00402100
00402100  JMP  004042e0

================================================================================
; FUNCTION: EndModalLoop @ 00402106
00402106  JMP  004042dc

================================================================================
; FUNCTION: OnDrawIconicThumbnailOrLivePreview @ 0040210c
0040210c  JMP  004042c8

================================================================================
; FUNCTION: EnsureStdObj @ 00402112
00402112  JMP  004042c4

================================================================================
; FUNCTION: get_accParent @ 00402118
00402118  JMP  004041f4

================================================================================
; FUNCTION: get_accChildCount @ 0040211e
0040211e  JMP  00404110

================================================================================
; FUNCTION: get_accChild @ 00402124
00402124  JMP  00404114

================================================================================
; FUNCTION: get_accName @ 0040212a
0040212a  JMP  00404118

================================================================================
; FUNCTION: get_accValue @ 00402130
00402130  JMP  0040411c

================================================================================
; FUNCTION: get_accDescription @ 00402136
00402136  JMP  00404120

================================================================================
; FUNCTION: get_accRole @ 0040213c
0040213c  JMP  00404124

================================================================================
; FUNCTION: get_accState @ 00402142
00402142  JMP  00404128

================================================================================
; FUNCTION: get_accHelp @ 00402148
00402148  JMP  0040412c

================================================================================
; FUNCTION: get_accHelpTopic @ 0040214e
0040214e  JMP  00404130

================================================================================
; FUNCTION: get_accKeyboardShortcut @ 00402154
00402154  JMP  00404134

================================================================================
; FUNCTION: get_accFocus @ 0040215a
0040215a  JMP  00404138

================================================================================
; FUNCTION: get_accSelection @ 00402160
00402160  JMP  0040413c

================================================================================
; FUNCTION: get_accDefaultAction @ 00402166
00402166  JMP  00404140

================================================================================
; FUNCTION: accSelect @ 0040216c
0040216c  JMP  00404144

================================================================================
; FUNCTION: accLocation @ 00402172
00402172  JMP  00404148

================================================================================
; FUNCTION: accNavigate @ 00402178
00402178  JMP  0040414c

================================================================================
; FUNCTION: accHitTest @ 0040217e
0040217e  JMP  00404150

================================================================================
; FUNCTION: accDoDefaultAction @ 00402184
00402184  JMP  00404154

================================================================================
; FUNCTION: put_accName @ 0040218a
0040218a  JMP  00404158

================================================================================
; FUNCTION: put_accValue @ 00402190
00402190  JMP  0040415c

================================================================================
; FUNCTION: SetProxy @ 00402196
00402196  JMP  00404160

================================================================================
; FUNCTION: CreateAccessibleProxy @ 0040219c
0040219c  JMP  00404164

================================================================================
; FUNCTION: OnCommand @ 004021a2
004021a2  JMP  00404168

================================================================================
; FUNCTION: OnNotify @ 004021a8
004021a8  JMP  0040416c

================================================================================
; FUNCTION: GetSuperWndProcAddr @ 004021ae
004021ae  JMP  00404170

================================================================================
; FUNCTION: PreTranslateMessage @ 004021b4
004021b4  JMP  00404174

================================================================================
; FUNCTION: OnAmbientProperty @ 004021ba
004021ba  JMP  00404178

================================================================================
; FUNCTION: WindowProc @ 004021c0
004021c0  JMP  0040436c

================================================================================
; FUNCTION: OnWndMsg @ 004021c6
004021c6  JMP  00404180

================================================================================
; FUNCTION: DefWindowProcA @ 004021cc
004021cc  JMP  00404184

================================================================================
; FUNCTION: PostNcDestroy @ 004021d2
004021d2  JMP  00404188

================================================================================
; FUNCTION: OnChildNotify @ 004021d8
004021d8  JMP  0040418c

================================================================================
; FUNCTION: OnTouchInputs @ 004021de
004021de  JMP  00404190

================================================================================
; FUNCTION: OnTouchInput @ 004021e4
004021e4  JMP  00404194

================================================================================
; FUNCTION: GetGestureStatus @ 004021ea
004021ea  JMP  00404198

================================================================================
; FUNCTION: OnGestureZoom @ 004021f0
004021f0  JMP  0040419c

================================================================================
; FUNCTION: OnGesturePan @ 004021f6
004021f6  JMP  004041a0

================================================================================
; FUNCTION: OnGestureRotate @ 004021fc
004021fc  JMP  004041a4

================================================================================
; FUNCTION: OnGestureTwoFingerTap @ 00402202
00402202  JMP  004041a8

================================================================================
; FUNCTION: OnGesturePressAndTap @ 00402208
00402208  JMP  004041ac

================================================================================
; FUNCTION: ResizeDynamicLayout @ 0040220e
0040220e  JMP  004041b0

================================================================================
; FUNCTION: CheckAutoCenter @ 00402214
00402214  JMP  004041b4

================================================================================
; FUNCTION: IsFrameWnd @ 0040221a
0040221a  JMP  004041b8

================================================================================
; FUNCTION: CreateControlContainer @ 00402220
00402220  JMP  004041bc

================================================================================
; FUNCTION: CreateControlSite @ 00402226
00402226  JMP  0040435c

================================================================================
; FUNCTION: SetOccDialogInfo @ 0040222c
0040222c  JMP  004041c4

================================================================================
; FUNCTION: GetOccDialogInfo @ 00402232
00402232  JMP  004041c8

================================================================================
; FUNCTION: Create @ 00402238
00402238  JMP  004041cc

================================================================================
; FUNCTION: CreateIndirect @ 0040223e
0040223e  JMP  004041d0

================================================================================
; FUNCTION: CreateIndirect @ 00402244
00402244  JMP  004041d4

================================================================================
; FUNCTION: OnSetFont @ 0040224a
0040224a  JMP  004041d8

================================================================================
; FUNCTION: OnOK @ 00402250
00402250  JMP  004041dc

================================================================================
; FUNCTION: OnCancel @ 00402256
00402256  JMP  004041e0

================================================================================
; FUNCTION: PreInitDialog @ 0040225c
0040225c  JMP  004041e4

================================================================================
; FUNCTION: FUN_00402262 @ 00402262
00402262  CMP  ECX, 00406040
00402268  JNZ  0040226b
0040226a  RET
0040226b  JMP  0040250c

================================================================================
; FUNCTION: find_pe_section @ 00402270
; Library Function - Single Match
 struct _IMAGE_SECTION_HEADER * __cdecl find_pe_section(unsigned char * const,unsigned int)

Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release
00402270  PUSH  EBP
00402271  MOV  EBP, ESP
00402273  MOV  EAX, EBP, 0x8
00402276  PUSH  ESI
00402277  MOV  ECX, EAX, 0x3c
0040227a  ADD  ECX, EAX
0040227c  MOVZX  EAX, ECX, 0x14
00402280  LEA  EDX, ECX, 0x18
00402283  ADD  EDX, EAX
00402285  MOVZX  EAX, ECX, 0x6
00402289  IMUL  ESI, EAX, 0x28
0040228c  ADD  ESI, EDX
0040228e  CMP  EDX, ESI
00402290  JZ  004022ab
00402292  MOV  ECX, EBP, 0xc
00402295  CMP  ECX, EDX, 0xc
00402298  JC  004022a4
0040229a  MOV  EAX, EDX, 0x8
0040229d  ADD  EAX, EDX, 0xc
004022a0  CMP  ECX, EAX
004022a2  JC  004022b0
004022a4  ADD  EDX, 0x28
004022a7  CMP  EDX, ESI
004022a9  JNZ  00402295
004022ab  XOR  EAX, EAX
004022ad  POP  ESI
004022ae  POP  EBP
004022af  RET
004022b0  MOV  EAX, EDX
004022b2  JMP  004022ad

================================================================================
; FUNCTION: ___scrt_acquire_startup_lock @ 004022b4
; Library Function - Single Match
 ___scrt_acquire_startup_lock

Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release
004022b4  PUSH  ESI
004022b5  CALL  00402ab7
004022ba  TEST  EAX, EAX
004022bc  JZ  004022de
004022be  MOV  EAX, FS, 0x18
004022c4  MOV  ESI, 0x406194
004022c9  MOV  EDX, EAX, 0x4
004022cc  JMP  004022d2
004022ce  CMP  EDX, EAX
004022d0  JZ  004022e2
004022d2  XOR  EAX, EAX
004022d4  MOV  ECX, EDX
004022d6  CMPXCHG.LOCK  ESI, ECX
004022da  TEST  EAX, EAX
004022dc  JNZ  004022ce
004022de  XOR  AL, AL
004022e0  POP  ESI
004022e1  RET
004022e2  MOV  AL, 0x1
004022e4  POP  ESI
004022e5  RET

================================================================================
; FUNCTION: ___scrt_initialize_crt @ 004022e6
; Library Function - Single Match
 ___scrt_initialize_crt

Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release
004022e6  PUSH  EBP
004022e7  MOV  EBP, ESP
004022e9  CMP  EBP, 0x8, 0x0
004022ed  JNZ  004022f6
004022ef  MOV  00406198, 0x1
004022f6  CALL  004028df
004022fb  CALL  00402d64
00402300  TEST  AL, AL
00402302  JNZ  00402308
00402304  XOR  AL, AL
00402306  POP  EBP
00402307  RET
00402308  CALL  00402d64
0040230d  TEST  AL, AL
0040230f  JNZ  0040231b
00402311  PUSH  0x0
00402313  CALL  00402d64
00402318  POP  ECX
00402319  JMP  00402304
0040231b  MOV  AL, 0x1
0040231d  POP  EBP
0040231e  RET

================================================================================
; FUNCTION: ___scrt_initialize_onexit_tables @ 0040231f
; Library Function - Single Match
 ___scrt_initialize_onexit_tables

Library: Visual Studio 2019 Release
0040231f  PUSH  EBP
00402320  MOV  EBP, ESP
00402322  CMP  00406199, 0x0
00402329  JZ  0040232f
0040232b  MOV  AL, 0x1
0040232d  POP  EBP
0040232e  RET
0040232f  PUSH  ESI
00402330  MOV  ESI, EBP, 0x8
00402333  TEST  ESI, ESI
00402335  JZ  0040233c
00402337  CMP  ESI, 0x1
0040233a  JNZ  0040239e
0040233c  CALL  00402ab7
00402341  TEST  EAX, EAX
00402343  JZ  0040236b
00402345  TEST  ESI, ESI
00402347  JNZ  0040236b
00402349  PUSH  0x40619c
0040234e  CALL  00402ef4
00402353  POP  ECX
00402354  TEST  EAX, EAX
00402356  JNZ  00402367
00402358  PUSH  0x4061a8
0040235d  CALL  00402ef4
00402362  POP  ECX
00402363  TEST  EAX, EAX
00402365  JZ  00402392
00402367  XOR  AL, AL
00402369  JMP  0040239b
0040236b  OR  ECX, 0xffffffff
0040236e  MOV  0040619c, ECX
00402374  MOV  004061a0, ECX
0040237a  MOV  004061a4, ECX
00402380  MOV  004061a8, ECX
00402386  MOV  004061ac, ECX
0040238c  MOV  004061b0, ECX
00402392  MOV  00406199, 0x1
00402399  MOV  AL, 0x1
0040239b  POP  ESI
0040239c  POP  EBP
0040239d  RET
0040239e  PUSH  0x5
004023a0  CALL  00402ac3
004023a5  INT3

================================================================================
; FUNCTION: ___scrt_is_nonwritable_in_current_image @ 004023a6
; Library Function - Single Match
 ___scrt_is_nonwritable_in_current_image

Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release
004023a6  PUSH  0x8
004023a8  PUSH  0x4051b8
004023ad  CALL  00402860
004023b2  AND  EBP, -0x4, 0x0
004023b6  MOV  EAX, 0x5a4d
004023bb  CMP  00400000, AX
004023c2  JNZ  00402421
004023c4  MOV  EAX, 0040003c
004023c9  CMP  EAX, 0x400000, 0x4550
004023d3  JNZ  00402421
004023d5  MOV  ECX, 0x10b
004023da  CMP  EAX, 0x400018, CX
004023e1  JNZ  00402421
004023e3  MOV  EAX, EBP, 0x8
004023e6  MOV  ECX, 0x400000
004023eb  SUB  EAX, ECX
004023ed  PUSH  EAX
004023ee  PUSH  ECX
004023ef  CALL  00402270
004023f4  POP  ECX
004023f5  POP  ECX
004023f6  TEST  EAX, EAX
004023f8  JZ  00402421
004023fa  CMP  EAX, 0x24, 0x0
004023fe  JL  00402421
00402400  MOV  EBP, -0x4, 0xfffffffe
00402407  MOV  AL, 0x1
00402409  JMP  0040242a
00402421  MOV  EBP, -0x4, 0xfffffffe
00402428  XOR  AL, AL
0040242a  MOV  ECX, EBP, -0x10
0040242d  MOV  FS, 0x0, ECX
00402434  POP  ECX
00402435  POP  EDI
00402436  POP  ESI
00402437  POP  EBX
00402438  LEAVE
00402439  RET

================================================================================
; FUNCTION: ___scrt_release_startup_lock @ 0040243a
; Library Function - Single Match
 ___scrt_release_startup_lock

Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release
0040243a  PUSH  EBP
0040243b  MOV  EBP, ESP
0040243d  CALL  00402ab7
00402442  TEST  EAX, EAX
00402444  JZ  00402455
00402446  CMP  EBP, 0x8, 0x0
0040244a  JNZ  00402455
0040244c  XOR  EAX, EAX
0040244e  MOV  ECX, 0x406194
00402453  XCHG  ECX, EAX
00402455  POP  EBP
00402456  RET

================================================================================
; FUNCTION: ___scrt_uninitialize_crt @ 00402457
; Library Function - Single Match
 ___scrt_uninitialize_crt

Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release
00402457  PUSH  EBP
00402458  MOV  EBP, ESP
0040245a  CMP  00406198, 0x0
00402461  JZ  00402469
00402463  CMP  EBP, 0xc, 0x0
00402467  JNZ  0040247b
00402469  PUSH  EBP, 0x8
0040246c  CALL  00402d64
00402471  PUSH  EBP, 0x8
00402474  CALL  00402d64
00402479  POP  ECX
0040247a  POP  ECX
0040247b  MOV  AL, 0x1
0040247d  POP  EBP
0040247e  RET

================================================================================
; FUNCTION: __onexit @ 0040247f
; Library Function - Single Match
 __onexit

Library: Visual Studio 2019 Release
0040247f  PUSH  EBP
00402480  MOV  EBP, ESP
00402482  CMP  0040619c, -0x1
00402489  PUSH  EBP, 0x8
0040248c  JNZ  00402495
0040248e  CALL  00402f00
00402493  JMP  004024a0
00402495  PUSH  0x40619c
0040249a  CALL  00402efa
0040249f  POP  ECX
004024a0  NEG  EAX
004024a2  POP  ECX
004024a3  SBB  EAX, EAX
004024a5  NOT  EAX
004024a7  AND  EAX, EBP, 0x8
004024aa  POP  EBP
004024ab  RET

================================================================================
; FUNCTION: _atexit @ 004024ac
; Library Function - Single Match
 _atexit

Library: Visual Studio 2019 Release
004024ac  PUSH  EBP
004024ad  MOV  EBP, ESP
004024af  PUSH  EBP, 0x8
004024b2  CALL  0040247f
004024b7  NEG  EAX
004024b9  POP  ECX
004024ba  SBB  EAX, EAX
004024bc  NEG  EAX
004024be  DEC  EAX
004024bf  POP  EBP
004024c0  RET

================================================================================
; FUNCTION: FUN_004024c1 @ 004024c1
004024c1  PUSH  EBP
004024c2  MOV  EBP, ESP
004024c4  TEST  EBP, 0x8, 0x1
004024c8  PUSH  ESI
004024c9  MOV  ESI, ECX
004024cb  MOV  ESI, 0x4043cc
004024d1  JZ  004024dd
004024d3  PUSH  0xc
004024d5  PUSH  ESI
004024d6  CALL  00402606
004024db  POP  ECX
004024dc  POP  ECX
004024dd  MOV  EAX, ESI
004024df  POP  ESI
004024e0  POP  EBP
004024e1  RET  0x4

================================================================================
; FUNCTION: FUN_004024e4 @ 004024e4
004024e4  PUSH  EBP
004024e5  MOV  EBP, ESP
004024e7  PUSH  0x0 ; LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter for SetUnhandledExceptionFilter
004024e9  CALL  0040402c
004024ef  PUSH  EBP, 0x8 ; _EXCEPTION_POINTERS * ExceptionInfo for UnhandledExceptionFilter
004024f2  CALL  00404030
004024f8  PUSH  0xc0000409 ; UINT uExitCode for TerminateProcess
004024fd  CALL  00404028
00402503  PUSH  EAX ; HANDLE hProcess for TerminateProcess
00402504  CALL  00404024
0040250a  POP  EBP
0040250b  RET

================================================================================
; FUNCTION: FUN_0040250c @ 0040250c
0040250c  PUSH  EBP
0040250d  MOV  EBP, ESP
0040250f  SUB  ESP, 0x324
00402515  PUSH  0x17 ; DWORD ProcessorFeature for IsProcessorFeaturePresent
00402517  CALL  00404020
0040251d  TEST  EAX, EAX
0040251f  JZ  00402526
00402521  PUSH  0x2
00402523  POP  ECX
00402524  INT  0x29
00402526  MOV  004062b8, EAX
0040252b  MOV  004062b4, ECX
00402531  MOV  004062b0, EDX
00402537  MOV  004062ac, EBX
0040253d  MOV  004062a8, ESI
00402543  MOV  004062a4, EDI
00402549  MOV  004062d0, SS
00402550  MOV  004062c4, CS
00402557  MOV  004062a0, DS
0040255e  MOV  0040629c, ES
00402565  MOV  00406298, FS
0040256c  MOV  00406294, GS
00402573  PUSHFD
00402574  POP  004062c8
0040257a  MOV  EAX, EBP
0040257d  MOV  004062bc, EAX
00402582  MOV  EAX, EBP, 0x4
00402585  MOV  004062c0, EAX
0040258a  LEA  EAX, EBP, 0x8
0040258d  MOV  004062cc, EAX
00402592  MOV  EAX, EBP, 0xfffffcdc
00402598  MOV  00406208, 0x10001
004025a2  MOV  EAX, 004062c0
004025a7  MOV  004061c4, EAX
004025ac  MOV  004061b8, 0xc0000409
004025b6  MOV  004061bc, 0x1
004025c0  MOV  004061c8, 0x1
004025ca  PUSH  0x4
004025cc  POP  EAX
004025cd  IMUL  EAX, EAX, 0x0
004025d0  MOV  EAX, 0x4061cc, 0x2
004025da  PUSH  0x4
004025dc  POP  EAX
004025dd  IMUL  EAX, EAX, 0x0
004025e0  MOV  ECX, 00406040
004025e6  MOV  EBP, EAX, 0x1, -0x8, ECX
004025ea  PUSH  0x4
004025ec  POP  EAX
004025ed  SHL  EAX, 0x0
004025f0  MOV  ECX, 00406080
004025f6  MOV  EBP, EAX, 0x1, -0x8, ECX
004025fa  PUSH  0x4043d0
004025ff  CALL  004024e4
00402604  LEAVE
00402605  RET

================================================================================
; FUNCTION: FUN_00402606 @ 00402606
00402606  PUSH  EBP
00402607  MOV  EBP, ESP
00402609  PUSH  EBP, 0x8 ; void * param_1 for operator_delete
0040260c  CALL  00401f23
00402611  POP  ECX
00402612  POP  EBP
00402613  RET

================================================================================
; FUNCTION: FUN_004026d9 @ 004026d9
004026d9  PUSH  0x14
004026db  PUSH  0x4051d8
004026e0  CALL  00402860
004026e5  PUSH  0x1
004026e7  CALL  004022e6
004026ec  POP  ECX
004026ed  TEST  AL, AL
004026ef  JZ  0040283f
004026f5  XOR  BL, BL
004026f7  MOV  EBP, -0x19, BL
004026fa  AND  EBP, -0x4, 0x0
004026fe  CALL  004022b4
00402703  MOV  EBP, -0x24, AL
00402706  MOV  EAX, 00406190
0040270b  XOR  ECX, ECX
0040270d  INC  ECX
0040270e  CMP  EAX, ECX
00402710  JZ  0040283f
00402716  TEST  EAX, EAX
00402718  JNZ  00402763
0040271a  MOV  00406190, ECX
00402720  PUSH  0x4043a8
00402725  PUSH  0x40439c
0040272a  CALL  00402f2a
0040272f  POP  ECX
00402730  POP  ECX
00402731  TEST  EAX, EAX
00402733  JZ  00402746
00402735  MOV  EBP, -0x4, 0xfffffffe
0040273c  MOV  EAX, 0xff
00402741  JMP  0040282f
00402746  PUSH  0x404398
0040274b  PUSH  0x404384
00402750  CALL  00402f24
00402755  POP  ECX
00402756  POP  ECX
00402757  MOV  00406190, 0x2
00402761  JMP  00402768
00402763  MOV  BL, CL
00402765  MOV  EBP, -0x19, BL
00402768  PUSH  EBP, -0x24
0040276b  CALL  0040243a
00402770  POP  ECX
00402771  CALL  00402db7
00402776  MOV  ESI, EAX
00402778  XOR  EDI, EDI
0040277a  CMP  ESI, EDI
0040277c  JZ  00402799
0040277e  PUSH  ESI
0040277f  CALL  004023a6
00402784  POP  ECX
00402785  TEST  AL, AL
00402787  JZ  00402799
00402789  MOV  ESI, ESI
0040278b  PUSH  EDI
0040278c  PUSH  0x2
0040278e  PUSH  EDI
0040278f  MOV  ECX, ESI
00402791  CALL  0040437c
00402797  CALL  ESI
00402799  CALL  00402dbd
0040279e  MOV  ESI, EAX
004027a0  CMP  ESI, EDI
004027a2  JZ  004027b7
004027a4  PUSH  ESI
004027a5  CALL  004023a6
004027aa  POP  ECX
004027ab  TEST  AL, AL
004027ad  JZ  004027b7
004027af  PUSH  ESI
004027b1  CALL  00402f48
004027b6  POP  ECX
004027b7  CALL  00402bd8
004027bc  MOVZX  ESI, AX
004027bf  CALL  00402f1e
004027c4  PUSH  ESI
004027c5  PUSH  EAX
004027c6  PUSH  EDI
004027c7  PUSH  0x400000
004027cc  CALL  00402f94
004027d1  MOV  ESI, EAX
004027d3  CALL  00402c0e
004027d8  TEST  AL, AL
004027da  JZ  00402846
004027dc  TEST  BL, BL
004027de  JNZ  004027e5
004027e0  CALL  00402f06
004027e5  PUSH  EDI
004027e6  PUSH  0x1
004027e8  CALL  00402457
004027ed  POP  ECX
004027ee  POP  ECX
004027ef  MOV  EBP, -0x4, 0xfffffffe
004027f6  MOV  EAX, ESI
004027f8  JMP  0040282f
0040282f  MOV  ECX, EBP, -0x10
00402832  MOV  FS, 0x0, ECX
00402839  POP  ECX
0040283a  POP  EDI
0040283b  POP  ESI
0040283c  POP  EBX
0040283d  LEAVE
0040283e  RET
0040283f  PUSH  0x7
00402841  CALL  00402ac3
00402846  PUSH  ESI ; int _Code for exit
00402847  CALL  00402f30

================================================================================
; FUNCTION: entry @ 00402855
00402855  CALL  00402d07
0040285a  JMP  004026d9

================================================================================
; FUNCTION: __SEH_prolog4 @ 00402860
; Library Function - Single Match
 __SEH_prolog4

Library: Visual Studio
00402860  PUSH  0x4028b0
00402865  PUSH  FS, 0x0
0040286c  MOV  EAX, ESP, 0x10
00402870  MOV  ESP, 0x10, EBP
00402874  LEA  EBP, ESP, 0x10
00402878  SUB  ESP, EAX
0040287a  PUSH  EBX
0040287b  PUSH  ESI
0040287c  PUSH  EDI
0040287d  MOV  EAX, 00406040
00402882  XOR  EBP, -0x4, EAX
00402885  XOR  EAX, EBP
00402887  PUSH  EAX
00402888  MOV  EBP, -0x18, ESP
0040288b  PUSH  EBP, -0x8
0040288e  MOV  EAX, EBP, -0x4
00402891  MOV  EBP, -0x4, 0xfffffffe
00402898  MOV  EBP, -0x8, EAX
0040289b  LEA  EAX, EBP, -0x10
0040289e  MOV  FS, 0x0, EAX
004028a4  RET

================================================================================
; FUNCTION: __except_handler4 @ 004028b0
; Library Function - Single Match
 __except_handler4

Library: Visual Studio 2019 Release
004028b0  PUSH  EBP
004028b1  MOV  EBP, ESP
004028b3  PUSH  ESI
004028b4  MOV  ESI, EBP, 0x8
004028b7  PUSH  ESI
004028b9  CALL  00402fa3
004028be  PUSH  EBP, 0x14
004028c1  MOV  ESI, EAX
004028c3  PUSH  EBP, 0x10
004028c6  PUSH  EBP, 0xc
004028c9  PUSH  ESI
004028ca  PUSH  0x402262
004028cf  PUSH  0x406040
004028d4  CALL  00402edc
004028d9  ADD  ESP, 0x1c
004028dc  POP  ESI
004028dd  POP  EBP
004028de  RET

================================================================================
; FUNCTION: FUN_004028df @ 004028df
004028df  PUSH  EBP
004028e0  MOV  EBP, ESP
004028e2  AND  004064dc, 0x0
004028e9  SUB  ESP, 0x24
004028ec  OR  00406084, 0x1
004028f3  PUSH  0xa ; DWORD ProcessorFeature for IsProcessorFeaturePresent
004028f5  CALL  00404020
004028fb  TEST  EAX, EAX
004028fd  JZ  00402aaf
00402903  AND  EBP, -0x10, 0x0
00402907  XOR  EAX, EAX
00402909  PUSH  EBX
0040290a  PUSH  ESI
0040290b  PUSH  EDI
0040290c  XOR  ECX, ECX
0040290e  LEA  EDI, EBP, -0x24
00402911  PUSH  EBX
00402912  CPUID
00402914  MOV  ESI, EBX
00402916  POP  EBX
00402917  NOP
00402918  MOV  EDI, EAX
0040291a  MOV  EDI, 0x4, ESI
0040291d  MOV  EDI, 0x8, ECX
00402920  XOR  ECX, ECX
00402922  MOV  EDI, 0xc, EDX
00402925  MOV  EAX, EBP, -0x24
00402928  MOV  EDI, EBP, -0x20
0040292b  MOV  EBP, -0xc, EAX
0040292e  XOR  EDI, 0x756e6547
00402934  MOV  EAX, EBP, -0x18
00402937  XOR  EAX, 0x49656e69
0040293c  MOV  EBP, -0x4, EAX
0040293f  MOV  EAX, EBP, -0x1c
00402942  XOR  EAX, 0x6c65746e
00402947  MOV  EBP, -0x8, EAX
0040294a  XOR  EAX, EAX
0040294c  INC  EAX
0040294d  PUSH  EBX
0040294e  CPUID
00402950  MOV  ESI, EBX
00402952  POP  EBX
00402953  NOP
00402954  LEA  EBX, EBP, -0x24
00402957  MOV  EBX, EAX
00402959  MOV  EAX, EBP, -0x4
0040295c  OR  EAX, EBP, -0x8
0040295f  OR  EAX, EDI
00402961  MOV  EBX, 0x4, ESI
00402964  MOV  EBX, 0x8, ECX
00402967  MOV  EBX, 0xc, EDX
0040296a  JNZ  004029af
0040296c  MOV  EAX, EBP, -0x24
0040296f  AND  EAX, 0xfff3ff0
00402974  CMP  EAX, 0x106c0
00402979  JZ  0040299e
0040297b  CMP  EAX, 0x20660
00402980  JZ  0040299e
00402982  CMP  EAX, 0x20670
00402987  JZ  0040299e
00402989  CMP  EAX, 0x30650
0040298e  JZ  0040299e
00402990  CMP  EAX, 0x30660
00402995  JZ  0040299e
00402997  CMP  EAX, 0x30670
0040299c  JNZ  004029af
0040299e  MOV  EDI, 004064e0
004029a4  OR  EDI, 0x1
004029a7  MOV  004064e0, EDI
004029ad  JMP  004029b5
004029af  MOV  EDI, 004064e0
004029b5  MOV  ECX, EBP, -0x1c
004029b8  PUSH  0x7
004029ba  POP  EAX
004029bb  MOV  EBP, -0x4, ECX
004029be  CMP  EBP, -0xc, EAX
004029c1  JL  004029f3
004029c3  XOR  ECX, ECX
004029c5  PUSH  EBX
004029c6  CPUID
004029c8  MOV  ESI, EBX
004029ca  POP  EBX
004029cb  NOP
004029cc  LEA  EBX, EBP, -0x24
004029cf  MOV  EBX, EAX
004029d1  MOV  EBX, 0x4, ESI
004029d4  MOV  EBX, 0x8, ECX
004029d7  MOV  ECX, EBP, -0x4
004029da  MOV  EBX, 0xc, EDX
004029dd  MOV  EBX, EBP, -0x20
004029e0  TEST  EBX, 0x200
004029e6  JZ  004029f6
004029e8  OR  EDI, 0x2
004029eb  MOV  004064e0, EDI
004029f1  JMP  004029f6
004029f3  MOV  EBX, EBP, -0x10
004029f6  MOV  EAX, 00406084
004029fb  OR  EAX, 0x2
004029fe  MOV  004064dc, 0x1
00402a08  MOV  00406084, EAX
00402a0d  TEST  ECX, 0x100000
00402a13  JZ  00402aac
00402a19  OR  EAX, 0x4
00402a1c  MOV  004064dc, 0x2
00402a26  MOV  00406084, EAX
00402a2b  TEST  ECX, 0x8000000
00402a31  JZ  00402aac
00402a33  TEST  ECX, 0x10000000
00402a39  JZ  00402aac
00402a3b  XOR  ECX, ECX
00402a3d  XGETBV
00402a40  MOV  EBP, -0x14, EAX
00402a43  MOV  EBP, -0x10, EDX
00402a46  MOV  EAX, EBP, -0x14
00402a49  MOV  ECX, EBP, -0x10
00402a4c  PUSH  0x6
00402a4e  POP  ESI
00402a4f  AND  EAX, ESI
00402a51  CMP  EAX, ESI
00402a53  JNZ  00402aac
00402a55  MOV  EAX, 00406084
00402a5a  OR  EAX, 0x8
00402a5d  MOV  004064dc, 0x3
00402a67  MOV  00406084, EAX
00402a6c  TEST  BL, 0x20
00402a6f  JZ  00402aac
00402a71  OR  EAX, 0x20
00402a74  MOV  004064dc, 0x5
00402a7e  MOV  00406084, EAX
00402a83  MOV  EAX, 0xd0030000
00402a88  AND  EBX, EAX
00402a8a  CMP  EBX, EAX
00402a8c  JNZ  00402aac
00402a8e  MOV  EAX, EBP, -0x14
00402a91  MOV  EDX, 0xe0
00402a96  MOV  ECX, EBP, -0x10
00402a99  AND  EAX, EDX
00402a9b  CMP  EAX, EDX
00402a9d  JNZ  00402aac
00402a9f  OR  00406084, 0x40
00402aa6  MOV  004064dc, ESI
00402aac  POP  EDI
00402aad  POP  ESI
00402aae  POP  EBX
00402aaf  XOR  EAX, EAX
00402ab1  LEAVE
00402ab2  RET

================================================================================
; FUNCTION: FUN_00402ab3 @ 00402ab3
00402ab3  XOR  EAX, EAX
00402ab5  INC  EAX
00402ab6  RET

================================================================================
; FUNCTION: ___scrt_is_ucrt_dll_in_use @ 00402ab7
; Library Function - Single Match
 ___scrt_is_ucrt_dll_in_use

Library: Visual Studio 2019 Release
00402ab7  XOR  EAX, EAX
00402ab9  CMP  0040608c, EAX
00402abf  SETNZ  AL
00402ac2  RET

================================================================================
; FUNCTION: FUN_00402ac3 @ 00402ac3
00402ac3  PUSH  EBP
00402ac4  MOV  EBP, ESP
00402ac6  SUB  ESP, 0x324
00402acc  PUSH  ESI
00402acd  PUSH  0x17 ; DWORD ProcessorFeature for IsProcessorFeaturePresent
00402acf  CALL  00404020
00402ad5  TEST  EAX, EAX
00402ad7  JZ  00402ade
00402ad9  MOV  ECX, EBP, 0x8
00402adc  INT  0x29
00402ade  PUSH  0x3 ; size_t _Size for memset
00402ae0  CALL  00402cb2
00402ae5  MOV  ESP, 0x2cc
00402aec  LEA  EAX, EBP, 0xfffffcdc
00402af2  PUSH  0x0 ; int _Val for memset
00402af4  PUSH  EAX ; void * _Dst for memset
00402af5  CALL  00402eca
00402afa  ADD  ESP, 0xc
00402afd  MOV  EBP, 0xfffffd8c, EAX
00402b03  MOV  EBP, 0xfffffd88, ECX
00402b09  MOV  EBP, 0xfffffd84, EDX
00402b0f  MOV  EBP, 0xfffffd80, EBX
00402b15  MOV  EBP, 0xfffffd7c, ESI
00402b1b  MOV  EBP, 0xfffffd78, EDI
00402b21  MOV  EBP, 0xfffffda4, SS
00402b28  MOV  EBP, 0xfffffd98, CS
00402b2f  MOV  EBP, 0xfffffd74, DS
00402b36  MOV  EBP, 0xfffffd70, ES
00402b3d  MOV  EBP, 0xfffffd6c, FS
00402b44  MOV  EBP, 0xfffffd68, GS
00402b4b  PUSHFD
00402b4c  POP  EBP, 0xfffffd9c
00402b52  MOV  EAX, EBP, 0x4
00402b55  MOV  EBP, 0xfffffd94, EAX
00402b5b  LEA  EAX, EBP, 0x4
00402b5e  MOV  EBP, 0xfffffda0, EAX
00402b64  MOV  EBP, 0xfffffcdc, 0x10001
00402b6e  MOV  EAX, EAX, -0x4
00402b71  PUSH  0x50 ; size_t _Size for memset
00402b73  MOV  EBP, 0xfffffd90, EAX
00402b79  LEA  EAX, EBP, -0x58
00402b7c  PUSH  0x0 ; int _Val for memset
00402b7e  PUSH  EAX ; void * _Dst for memset
00402b7f  CALL  00402eca
00402b84  MOV  EAX, EBP, 0x4
00402b87  ADD  ESP, 0xc
00402b8a  MOV  EBP, -0x58, 0x40000015
00402b91  MOV  EBP, -0x54, 0x1
00402b98  MOV  EBP, -0x4c, EAX
00402b9b  CALL  0040401c
00402ba1  MOV  ESI, EAX
00402ba3  LEA  EAX, EBP, -0x58
00402ba6  MOV  EBP, -0x8, EAX
00402ba9  LEA  EAX, EBP, 0xfffffcdc
00402baf  PUSH  0x0 ; LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter for SetUnhandledExceptionFilter
00402bb1  MOV  EBP, -0x4, EAX
00402bb4  CALL  0040402c
00402bba  LEA  EAX, EBP, -0x8
00402bbd  PUSH  EAX ; _EXCEPTION_POINTERS * ExceptionInfo for UnhandledExceptionFilter
00402bbe  CALL  00404030
00402bc4  TEST  EAX, EAX
00402bc6  JNZ  00402bd5
00402bc8  CMP  ESI, 0x1
00402bcb  JZ  00402bd5
00402bcd  PUSH  0x3
00402bcf  CALL  00402cb2
00402bd4  POP  ECX
00402bd5  POP  ESI
00402bd6  LEAVE
00402bd7  RET

================================================================================
; FUNCTION: ___scrt_get_show_window_mode @ 00402bd8
; Library Function - Single Match
 ___scrt_get_show_window_mode

Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release
00402bd8  PUSH  EBP
00402bd9  MOV  EBP, ESP
00402bdb  SUB  ESP, 0x44
00402bde  PUSH  0x44 ; size_t _Size for memset
00402be0  LEA  EAX, EBP, -0x44
00402be3  PUSH  0x0 ; int _Val for memset
00402be5  PUSH  EAX ; void * _Dst for memset
00402be6  CALL  00402eca
00402beb  ADD  ESP, 0xc
00402bee  LEA  EAX, EBP, -0x44
00402bf1  PUSH  EAX ; LPSTARTUPINFOW lpStartupInfo for GetStartupInfoW
00402bf2  CALL  00404018
00402bf8  TEST  EBP, -0x18, 0x1
00402bfc  JZ  00402c04
00402bfe  MOVZX  EAX, EBP, -0x14
00402c02  LEAVE
00402c03  RET
00402c04  PUSH  0xa
00402c06  POP  EAX
00402c07  LEAVE
00402c08  RET

================================================================================
; FUNCTION: thunk_FUN_004011a0 @ 00402c09
00402c09  JMP  004011a0

================================================================================
; FUNCTION: FUN_00402c0e @ 00402c0e
00402c0e  PUSH  0x0 ; LPCWSTR lpModuleName for GetModuleHandleW
00402c10  CALL  00404034
00402c16  TEST  EAX, EAX
00402c18  JZ  00402c4d
00402c1a  MOV  ECX, 0x5a4d
00402c1f  CMP  EAX, CX
00402c22  JNZ  00402c4d
00402c24  MOV  ECX, EAX, 0x3c
00402c27  ADD  ECX, EAX
00402c29  CMP  ECX, 0x4550
00402c2f  JNZ  00402c4d
00402c31  MOV  EAX, 0x10b
00402c36  CMP  ECX, 0x18, AX
00402c3a  JNZ  00402c4d
00402c3c  CMP  ECX, 0x74, 0xe
00402c40  JBE  00402c4d
00402c42  CMP  ECX, 0xe8, 0x0
00402c49  SETNZ  AL
00402c4c  RET
00402c4d  XOR  AL, AL
00402c4f  RET

================================================================================
; FUNCTION: FUN_00402c50 @ 00402c50
00402c50  PUSH  0x402c5c ; LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter for SetUnhandledExceptionFilter
00402c55  CALL  0040402c
00402c5b  RET

================================================================================
; FUNCTION: lpTopLevelExceptionFilter_00402c5c @ 00402c5c
; lpTopLevelExceptionFilter parameter of SetUnhandledExceptionFilter

00402c5c  PUSH  EBP
00402c5d  MOV  EBP, ESP
00402c5f  PUSH  ESI
00402c60  PUSH  EDI
00402c61  MOV  EDI, EBP, 0x8
00402c64  MOV  ESI, EDI
00402c66  CMP  ESI, 0xe06d7363
00402c6c  JNZ  00402c93
00402c6e  CMP  ESI, 0x10, 0x3
00402c72  JNZ  00402c93
00402c74  MOV  EAX, ESI, 0x14
00402c77  CMP  EAX, 0x19930520
00402c7c  JZ  00402c9b
00402c7e  CMP  EAX, 0x19930521
00402c83  JZ  00402c9b
00402c85  CMP  EAX, 0x19930522
00402c8a  JZ  00402c9b
00402c8c  CMP  EAX, 0x1994000
00402c91  JZ  00402c9b
00402c93  POP  EDI
00402c94  XOR  EAX, EAX
00402c96  POP  ESI
00402c97  POP  EBP
00402c98  RET  0x4
00402c9b  CALL  00402ed0
00402ca0  MOV  EAX, ESI
00402ca2  MOV  ESI, EDI, 0x4
00402ca5  CALL  00402ed6
00402caa  MOV  EAX, ESI
00402cac  CALL  00402f60

================================================================================
; FUNCTION: FUN_00402cb2 @ 00402cb2
00402cb2  AND  004064e4, 0x0
00402cb9  RET

================================================================================
; FUNCTION: ___get_entropy @ 00402cba
; Library Function - Single Match
 ___get_entropy

Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release
00402cba  PUSH  EBP
00402cbb  MOV  EBP, ESP
00402cbd  SUB  ESP, 0x14
00402cc0  AND  EBP, -0xc, 0x0
00402cc4  LEA  EAX, EBP, -0xc
00402cc7  AND  EBP, -0x8, 0x0
00402ccb  PUSH  EAX ; LPFILETIME lpSystemTimeAsFileTime for GetSystemTimeAsFileTime
00402ccc  CALL  00404008
00402cd2  MOV  EAX, EBP, -0x8
00402cd5  XOR  EAX, EBP, -0xc
00402cd8  MOV  EBP, -0x4, EAX
00402cdb  CALL  0040400c
00402ce1  XOR  EBP, -0x4, EAX
00402ce4  CALL  00404010
00402cea  XOR  EBP, -0x4, EAX
00402ced  LEA  EAX, EBP, -0x14
00402cf0  PUSH  EAX ; LARGE_INTEGER * lpPerformanceCount for QueryPerformanceCounter
00402cf1  CALL  00404014
00402cf7  MOV  EAX, EBP, -0x10
00402cfa  LEA  ECX, EBP, -0x4
00402cfd  XOR  EAX, EBP, -0x14
00402d00  XOR  EAX, EBP, -0x4
00402d03  XOR  EAX, ECX
00402d05  LEAVE
00402d06  RET

================================================================================
; FUNCTION: ___security_init_cookie @ 00402d07
; Library Function - Single Match
 ___security_init_cookie

Libraries: Visual Studio 2017 Release, Visual Studio 2019 Release
00402d07  MOV  ECX, 00406040
00402d0d  PUSH  ESI
00402d0e  PUSH  EDI
00402d0f  MOV  EDI, 0xbb40e64e
00402d14  MOV  ESI, 0xffff0000
00402d19  CMP  ECX, EDI
00402d1b  JZ  00402d21
00402d1d  TEST  ESI, ECX
00402d1f  JNZ  00402d47
00402d21  CALL  00402cba
00402d26  MOV  ECX, EAX
00402d28  CMP  ECX, EDI
00402d2a  JNZ  00402d33
00402d2c  MOV  ECX, 0xbb40e64f
00402d31  JMP  00402d41
00402d33  TEST  ESI, ECX
00402d35  JNZ  00402d41
00402d37  OR  EAX, 0x4711
00402d3c  SHL  EAX, 0x10
00402d3f  OR  ECX, EAX
00402d41  MOV  00406040, ECX
00402d47  NOT  ECX
00402d49  POP  EDI
00402d4a  MOV  00406080, ECX
00402d50  POP  ESI
00402d51  RET

================================================================================
; FUNCTION: FUN_00402d52 @ 00402d52
00402d52  MOV  EAX, 0x4000
00402d57  RET

================================================================================
; FUNCTION: FUN_00402d58 @ 00402d58
00402d58  PUSH  0x4064f0 ; PSLIST_HEADER ListHead for InitializeSListHead
00402d5d  CALL  00404004
00402d63  RET

================================================================================
; FUNCTION: FUN_00402d64 @ 00402d64
00402d64  MOV  AL, 0x1
00402d66  RET

================================================================================
; FUNCTION: FUN_00402d67 @ 00402d67
00402d67  PUSH  0x30000 ; uint _Mask for _controlfp_s
00402d6c  PUSH  0x10000 ; uint _NewValue for _controlfp_s
00402d71  PUSH  0x0 ; uint * _CurrentState for _controlfp_s
00402d73  CALL  00402f66
00402d78  ADD  ESP, 0xc
00402d7b  TEST  EAX, EAX
00402d7d  JNZ  00402d80
00402d7f  RET
00402d80  PUSH  0x7
00402d82  CALL  00402ac3
00402d87  INT3

================================================================================
; FUNCTION: FUN_00402d88 @ 00402d88
00402d88  MOV  EAX, 0x4064f8
00402d8d  RET

================================================================================
; FUNCTION: FUN_00402d8e @ 00402d8e
00402d8e  CALL  00401eb0
00402d93  MOV  ECX, EAX, 0x4
00402d96  OR  EAX, 0x24
00402d99  MOV  EAX, 0x4, ECX
00402d9c  CALL  00402d88
00402da1  MOV  ECX, EAX, 0x4
00402da4  OR  EAX, 0x2
00402da7  MOV  EAX, 0x4, ECX
00402daa  RET

================================================================================
; FUNCTION: FUN_00402dab @ 00402dab
00402dab  XOR  EAX, EAX
00402dad  CMP  00406088, EAX
00402db3  SETZ  AL
00402db6  RET

================================================================================
; FUNCTION: FUN_00402db7 @ 00402db7
00402db7  MOV  EAX, 0x406620
00402dbc  RET

================================================================================
; FUNCTION: FUN_00402dbd @ 00402dbd
00402dbd  MOV  EAX, 0x40661c
00402dc2  RET

================================================================================
; FUNCTION: FUN_00402dc3 @ 00402dc3
00402dc3  PUSH  EBX
00402dc4  PUSH  ESI
00402dc5  MOV  ESI, 0x4050e4
00402dca  MOV  EBX, 0x4050e4
00402dcf  CMP  ESI, EBX
00402dd1  JNC  00402dec
00402dd3  PUSH  EDI
00402dd4  MOV  EDI, ESI
00402dd6  TEST  EDI, EDI
00402dd8  JZ  00402de4
00402dda  MOV  ECX, EDI
00402ddc  CALL  0040437c
00402de2  CALL  EDI
00402de4  ADD  ESI, 0x4
00402de7  CMP  ESI, EBX
00402de9  JC  00402dd4
00402deb  POP  EDI
00402dec  POP  ESI
00402ded  POP  EBX
00402dee  RET

================================================================================
; FUNCTION: FUN_00402def @ 00402def
00402def  PUSH  EBX
00402df0  PUSH  ESI
00402df1  MOV  ESI, 0x4050ec
00402df6  MOV  EBX, 0x4050ec
00402dfb  CMP  ESI, EBX
00402dfd  JNC  00402e18
00402dff  PUSH  EDI
00402e00  MOV  EDI, ESI
00402e02  TEST  EDI, EDI
00402e04  JZ  00402e10
00402e06  MOV  ECX, EDI
00402e08  CALL  0040437c
00402e0e  CALL  EDI
00402e10  ADD  ESI, 0x4
00402e13  CMP  ESI, EBX
00402e15  JC  00402e00
00402e17  POP  EDI
00402e18  POP  ESI
00402e19  POP  EBX
00402e1a  RET

================================================================================
; FUNCTION: CAtlBaseModule @ 00402e1b
; Library Function - Single Match
 public: __thiscall ATL::CAtlBaseModule::CAtlBaseModule(void)

Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release
00402e1b  PUSH  ESI
00402e1c  MOV  ESI, ECX
00402e1e  CALL  00402e6e
00402e23  MOV  EAX, 0x400000
00402e28  MOV  ESI, 0x38
00402e2e  LEA  ECX, ESI, 0x14
00402e31  MOV  ESI, 0x8, EAX
00402e34  MOV  ESI, 0x4, EAX
00402e37  MOV  ESI, 0xc, 0xe00
00402e3e  MOV  ESI, 0x10, 0x4043d8
00402e45  CALL  00401f00
00402e4a  TEST  EAX, EAX
00402e4c  JNS  00402e6a
00402e4e  CALL  0040401c
00402e54  TEST  EAX, EAX
00402e56  JZ  00402e63
00402e58  PUSH  0x4043e8 ; LPCWSTR lpOutputString for OutputDebugStringW
00402e5d  CALL  00404000
00402e63  MOV  0040654c, 0x1
00402e6a  MOV  EAX, ESI
00402e6c  POP  ESI
00402e6d  RET

================================================================================
; FUNCTION: _ATL_BASE_MODULE70 @ 00402e6e
; Library Function - Single Match
 public: __thiscall ATL::_ATL_BASE_MODULE70::_ATL_BASE_MODULE70(void)

Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release
00402e6e  PUSH  ESI
00402e6f  PUSH  EDI
00402e70  MOV  ESI, ECX
00402e72  XOR  EDI, EDI
00402e74  PUSH  0x18 ; size_t _Size for memset
00402e76  PUSH  EDI ; int _Val for memset
00402e77  LEA  EAX, ESI, 0x14
00402e7a  PUSH  EAX ; void * _Dst for memset
00402e7b  CALL  00402eca
00402e80  ADD  ESP, 0xc
00402e83  MOV  ESI, 0x2c, EDI
00402e86  MOV  ESI, 0x30, EDI
00402e89  MOV  EAX, ESI
00402e8b  MOV  ESI, 0x34, EDI
00402e8e  POP  EDI
00402e8f  POP  ESI
00402e90  RET

================================================================================
; FUNCTION: ~CAtlBaseModule @ 00402e91
; Library Function - Single Match
 public: __thiscall ATL::CAtlBaseModule::~CAtlBaseModule(void)

Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release
00402e91  PUSH  ESI
00402e92  MOV  ESI, ECX
00402e94  LEA  EAX, ESI, 0x14
00402e97  PUSH  EAX ; LPCRITICAL_SECTION lpCriticalSection for DeleteCriticalSection
00402e98  CALL  00404038
00402e9e  LEA  ECX, ESI, 0x2c
00402ea1  POP  ESI
00402ea2  JMP  00402ea7

================================================================================
; FUNCTION: RemoveAll @ 00402ea7
; Library Function - Single Match
 public: void __thiscall ATL::CSimpleArray<struct HINSTANCE__ *,class ATL::CSimpleArrayEqualHelper<struct HINSTANCE__ *> >::RemoveAll(void)

Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release
00402ea7  PUSH  ESI
00402ea8  MOV  ESI, ECX
00402eaa  CMP  ESI, 0x0
00402ead  JZ  00402eba
00402eaf  PUSH  ESI ; void * _Memory for free
00402eb1  CALL  00402ee2
00402eb6  AND  ESI, 0x0
00402eb9  POP  ECX
00402eba  AND  ESI, 0x4, 0x0
00402ebe  AND  ESI, 0x8, 0x0
00402ec2  POP  ESI
00402ec3  RET

================================================================================
; FUNCTION: __CxxFrameHandler3 @ 00402ec4
00402ec4  JMP  00404070

================================================================================
; FUNCTION: memset @ 00402eca
00402eca  JMP  00404074

================================================================================
; FUNCTION: __current_exception @ 00402ed0
00402ed0  JMP  00404078

================================================================================
; FUNCTION: __current_exception_context @ 00402ed6
00402ed6  JMP  0040406c

================================================================================
; FUNCTION: _except_handler4_common @ 00402edc
00402edc  JMP  00404068

================================================================================
; FUNCTION: free @ 00402ee2
00402ee2  JMP  00404090

================================================================================
; FUNCTION: _configure_narrow_argv @ 00402ee8
00402ee8  JMP  004040bc

================================================================================
; FUNCTION: _initialize_narrow_environment @ 00402eee
00402eee  JMP  004040c8

================================================================================
; FUNCTION: _initialize_onexit_table @ 00402ef4
00402ef4  JMP  004040f0

================================================================================
; FUNCTION: _register_onexit_function @ 00402efa
00402efa  JMP  004040dc

================================================================================
; FUNCTION: _crt_atexit @ 00402f00
00402f00  JMP  004040ec

================================================================================
; FUNCTION: _cexit @ 00402f06
00402f06  JMP  004040e8

================================================================================
; FUNCTION: _seh_filter_exe @ 00402f0c
00402f0c  JMP  004040e4

================================================================================
; FUNCTION: _set_app_type @ 00402f12
00402f12  JMP  004040e0

================================================================================
; FUNCTION: __setusermatherr @ 00402f18
00402f18  JMP  004040a8

================================================================================
; FUNCTION: _get_narrow_winmain_command_line @ 00402f1e
00402f1e  JMP  004040b0

================================================================================
; FUNCTION: _initterm @ 00402f24
00402f24  JMP  004040d8

================================================================================
; FUNCTION: _initterm_e @ 00402f2a
00402f2a  JMP  004040d4

================================================================================
; FUNCTION: exit @ 00402f30
00402f30  JMP  004040d0

================================================================================
; FUNCTION: _exit @ 00402f36
00402f36  JMP  004040cc

================================================================================
; FUNCTION: _set_fmode @ 00402f3c
00402f3c  JMP  00404100

================================================================================
; FUNCTION: _c_exit @ 00402f42
00402f42  JMP  004040c4

================================================================================
; FUNCTION: _register_thread_local_exe_atexit_callback @ 00402f48
00402f48  JMP  004040c0

================================================================================
; FUNCTION: _configthreadlocale @ 00402f4e
00402f4e  JMP  0040409c

================================================================================
; FUNCTION: _set_new_mode @ 00402f54
00402f54  JMP  00404094

================================================================================
; FUNCTION: __p__commode @ 00402f5a
00402f5a  JMP  004040f8

================================================================================
; FUNCTION: terminate @ 00402f60
00402f60  JMP  004040b8

================================================================================
; FUNCTION: _controlfp_s @ 00402f66
00402f66  JMP  004040b4

================================================================================
; FUNCTION: FUN_00402f6c @ 00402f6c
00402f6c  PUSH  EBP
00402f6d  MOV  EBP, ESP
00402f6f  CALL  00402088
00402f74  MOV  EDX, EBP, 0x8
00402f77  MOV  ECX, EBP, 0xc
00402f7a  MOV  EAX, 0x14, DL
00402f7d  MOV  EAX, 0x44, ECX
00402f80  TEST  EDX, EDX
00402f82  JNZ  00402f8d
00402f84  PUSH  -0x3 ; int _CodePage for _setmbcp
00402f86  CALL  004040a0
00402f8c  POP  ECX
00402f8d  XOR  EAX, EAX
00402f8f  INC  EAX
00402f90  POP  EBP
00402f91  RET  0x8

================================================================================
; FUNCTION: FUN_00402f94 @ 00402f94
00402f94  PUSH  EBP
00402f95  MOV  EBP, ESP
00402f97  POP  EBP
00402f98  JMP  00402f9d
00402f9d  JMP  00404374

================================================================================
; FUNCTION: __filter_x86_sse2_floating_point_exception_default @ 00402fa3
; Library Function - Single Match
 __filter_x86_sse2_floating_point_exception_default

Library: Visual Studio 2019 Release
00402fa3  PUSH  EBP
00402fa4  MOV  EBP, ESP
00402fa6  PUSH  ECX
00402fa7  CMP  004064dc, 0x1
00402fae  JL  00403016
00402fb0  CMP  EBP, 0x8, 0xc00002b4
00402fb7  JZ  00402fc2
00402fb9  CMP  EBP, 0x8, 0xc00002b5
00402fc0  JNZ  00403016
00402fc2  STMXCSR  EBP, -0x4
00402fc6  MOV  EAX, EBP, -0x4
00402fc9  XOR  EAX, 0x3f
00402fcc  TEST  AL, 0x81
00402fce  JZ  0040300f
00402fd0  TEST  EAX, 0x204
00402fd5  JNZ  00402fde
00402fd7  MOV  EAX, 0xc000008e
00402fdc  LEAVE
00402fdd  RET
00402fde  TEST  EAX, 0x102
00402fe3  JZ  0040300f
00402fe5  TEST  EAX, 0x408
00402fea  JNZ  00402ff3
00402fec  MOV  EAX, 0xc0000091
00402ff1  LEAVE
00402ff2  RET
00402ff3  TEST  EAX, 0x810
00402ff8  JNZ  00403001
00402ffa  MOV  EAX, 0xc0000093
00402fff  LEAVE
00403000  RET
00403001  TEST  EAX, 0x1020
00403006  JNZ  00403016
00403008  MOV  EAX, 0xc000008f
0040300d  LEAVE
0040300e  RET
0040300f  MOV  EAX, 0xc0000090
00403014  LEAVE
00403015  RET
00403016  MOV  EAX, EBP, 0x8
00403019  LEAVE
0040301a  RET

================================================================================
; FUNCTION: Unwind@00403020 @ 00403020
00403020  LEA  ECX, EBP, 0xffffff34
00403026  JMP  00404258

================================================================================
; FUNCTION: Unwind@0040302c @ 0040302c
0040302c  LEA  ECX, EBP, 0xffffff34
00403032  JMP  00401170

================================================================================
; FUNCTION: Unwind@00403060 @ 00403060
00403060  LEA  ECX, EBP, -0x20
00403063  JMP  0040433c

================================================================================
; FUNCTION: Unwind@004030a0 @ 004030a0
004030a0  LEA  ECX, EBP, -0x34
004030a3  JMP  0040433c

================================================================================
; FUNCTION: Unwind@004030e0 @ 004030e0
004030e0  LEA  ECX, EBP, -0x10
004030e3  JMP  0040433c

================================================================================
; FUNCTION: FUN_0040311b @ 0040311b
0040311b  MOV  ECX, 0x406500
00403120  JMP  00402e91
